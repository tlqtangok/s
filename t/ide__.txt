outlook automatically reply email : File -> info -> automatically -> inside? outside,all file msg -> OK 

Youdao note Edit : ctrl +Tab can indent , shift +Tab restore indent ; 

Eclipse : Ctrl + Shift + /  --- can comment a BLOCK;
①ctrl+shift+R　open Resource :like .c

②File->switch workspace 

③cygwin clr --ctrl + L 

④ mcc link.cmd -g -Xtimer0 -arcv2em main.c interrupt.s -o main.out -m > main.map  ----How to compile in Cygwin?
ccac test.c -m  > txt.txt      # get default linker script 
⑤vim C++ color highlight 

 cp /usr/share/vim/vimXX/vimrc_example.vim ~/.vimrc ---- vimrc_example /usr/share/vim/vim74/vimrc_example.vim
add:
---
set nu
set nocompatible
set backspace=indent,eol,start
" Fix home and end in Terminal.app
" " end
 highlight comment ctermfg=6
 highlight MatchParen ctermbg=blue ctermfg=yellow
---

OR 
cp test.c $HOME/test5.c
⑥ ctrl+r , redo; 

 ⑦ 小数点，重复上一次操作，
⑧ shift + v, 块选；
⑨ from system clipboard to  vim: shift + Insert ; 
 ⑩


Haifeng Han (haifeng) is a new user and will need to run
ssh arcdev1      :ssh linqi@arcdev1
---p4_  ---

p4 dirs //dwarc/Tools/MetaWare/Toolset/main/dev/*
-
cannot clobber writable file:
use :   chmod -w what _filename
-
cd to where is your root; 
p4 sync ...@changelist_numb #p4 ge
-
# backup all my p4 client 
 p4 clients|grep linqi| perl -e ' @arr=<>; map{ @arr1=split; print "export P4CLIENT=@arr1[1] && p4 client -o > @arr1[1].p4_txt"."\n" ;} @arr;'  > sh.sh   && sh sh.sh
#
p4 set P4CONFIG=p4config.txt
p4 client -d temp_client  # delete xx client 
cat p4.config.tmp | p4 client -i  #p4 read from stdin , read from p4 template; 
p4 sync
p4 edit filename.txt  ; set file as open permission ; 
vim fn.txt 
p4 opened  ; #view which file can opened ; 
p4 revert  ;  revert edit permisson ; 
p4 help sync  : p4 help detail ; 
p4 diff fn.txt   # compare depot and local ; 
-
-
http://url.cn/RZcWPN  Linux p4 CONFIG
http://url.cn/RZcWPN p4 operate

<TAB>//dwarc/Tools/nsim/2013.03/...<SPACE>//linqi/nsim201303/...
把shell类型换成bash

p4 -p p4p-`/usr/local/bin/siteid`:1900 passwd

p4 -p p4p-`/usr/local/bin/siteid`:1900 login -a
before being able to access the depot.
You should also set your P4PORT to:
export P4PORT="p4p-`/usr/local/bin/siteid`:1900" (sh/ksh/bash)
p4 client

CPU裡頭含有微指令集
磁柱是分割槽的最小单位 ；
主要分割与延伸分割最多可以有四笔(硬碟的限制)

信号量 与 互斥量 －－－获得与释放的线程不一样
临界区－－－本进程可获取

---
#define DECLARE_TWO(A,B,_count) \
static int A[_count];  \
static int B[_count]; 
-
gcc -E test.c -o test.i  ---test.i Preprocess course
gcc -### test.c        # dump out all opt 
ccac -av2em test.c -D"mystring=\"YYY\""     
gcc test.c -D"mystring=\"YYY\""        # get all 
---gdb_
gdb> start     # break at main 
gdb> shell ls 
gdb> info local     # i local 
gdb> info reg  # info reg pc 
gdb> l     # show current run point,each time will scrolldown    , "ls 0"show first line "l main" 
gdb> del 6 7     # del bp 
gdb> print p     # print local var p # or use p p 
gdb> f             #show current stack frame,show cur line , also "f 1" 
gdb> bt     # back trace , show all call stack 


have inital data and static --- save in .data segment while not inital in .bss 
---objdump elfdump_  ---
objdump -s -j .data jidor_elf.elf
elfdump -td *.elf 
elfdump -z *.elf    # all the content 

objdump -h a.out
view variables segment : objdump -s -d a.out>txt.txt &&vim txt.txt
objcopy -j .text jidor.elf onlytext.elf 
objdump -h onlytext.elf 
---elfdump---
elfdump -th *.elf ; 
elfdump -z *.elf ; 
readelf -sh jidor_ccac.elf |grep myFunName : get func and it's size; 

---#xcam_ usage---
usage architect to build xcam, vtoc (xcam lib, vtoc , vs2012), the build/vtoc -> rascal.env
then ccac -tcf=xxx.tcf , then a.out 
mdb -cl -tcf=C:\ARC\Projects\project_hs36_vtoc_ok\bu ild\tool_config\arc.tcf -rascal -run a.out
mdb -cl -run a.out -- p0 p1 

-
set variables segments(only global static )---__attribute__((section("mySEG"))) int global_int=0x42;

static int x=0--not inital , in .bss or if =1 in .data
vim: yy copy whole line
readelf -h a.out ---can get little_endian info;
readelf -t example.elf  -> get  sym-table, and it's addr , depicted in link_cmd.lcf file;
[ 4] .text
       PROGBITS 00000220 000094 000b32 01 0 0 16
--- link_cmd.lcf ---
MEMORY
{
    VTABLE: ORIGIN = 0x00000000 LENGTH = 0x200  #(WR)
    ICCM: ORIGIN = 0x00000200 LENGTH = 64K - 0x200
    ICCM_ROM: ORIGIN = 0x00010000 LENGTH = 63K
    ICCM_OVR: ORIGIN = 0x0001FC00 LENGTH = 1K
    DCCM: ORIGIN = 0x80000000 LENGTH = 32K
    DCCM_ROM: ORIGIN = 0x80008000 LENGTH = 31K
    DCCM_OVR: ORIGIN = 0x8000FC00 LENGTH = 1K
}
SECTIONS
{
    GROUP: {
                .vectors: {}
            } > VTABLE
    GROUP: {
                *(TEXT) ALIGN(4) : {}
                *(LIT) ALIGN(4) : {}
            } > ICCM
    GROUP: {
                .sdata? ALIGN(4) : {}
                .sbss? ALIGN(4) : { * {.sbss} }
                _SDA_BASE_=SIZEOF(.sdata)+SIZEOF(.sbss)<= 255?ADDR(.sdata):ADDR(.sdata)+256;
                *(DATA) ALIGN(4) : {}
                *(BSS) ALIGN(4) : {}
                .stack ALIGN (4) SIZE(DEFINED _STACKSIZE?_STACKSIZE:4096): {}
                .heap? ALIGN (4) SIZE(DEFINED _HEAPSIZE?_HEAPSIZE:0): {}
            } > DCCM
}
---

－－－－－makefile_ －－－－－－

-
－
DIR1 DIR2 DIR3:
        $(MAKE) -C $@ all GCC=$(GCC)  : change the DIR_path before make; 

make -f hello.mak
make -C ./test -s   ;   cd into ./test before conduct make  -s , silent 

DIR=name name2
all:$(DIR)
$(DIR):
mkdir $@
-
ifeq ($(FILE), $(wildcard $(FILE)))
#do something here
#include $(FILE)
endif
-
make -e     # use environment variable precedence over makefile variables ; 
-
source_dir:=$(foreach dir, $(src),$(dir)\\srcdir)  # used for add anything ;  += \src ; 
-
foo?=lsfile => ifeq( $(origin foo), undefined ).  
--- makefile shell --- 
cur_dir:=$(shell cd test ; ls *.PL)
cur_dir=`readlink -f $0|xargs dirname`
cur_dir2:=$(shell ls *.PL)
all:
        echo $(cur_dir2)
        echo $(cur_dir)
-
.phony: clean

cfiles=$(wildcard src/*.c)

file=$(CURDIR)     #get full dir name of ./
space=$(nullstring) $(nullstring)     # Space ; 
notdir=$(notdir $(cfiles))
$(strip string)    # cut head and tail space 
# dirname /home/txt.txt  OR  basename /home/txt.txt
-
cd `dirname \`find_by_name relbuild.sh\``   cd to dirname
find .  -name '*1.txt' | xargs -i ls -al {}  
echo a | xargs -t -I{} cp {}  $t
-
obj=$(notdir:.c=.o)
ofiles=$(addprefix obj/,$(obj))
obj:=$(patsubst src/%.c,obj/%.o,$(src))


exe.exe:$(ofiles)
gcc -o $@ $^
obj/%.o:src/%.c
gcc -o $@ -c $^

-ar_
ar -t libopenvx.a 
-
clean : 
rm -rf obj/*.* *.exe;
－－－－－－－－－－－－－
wildcard -通配符；
patsubst -替换；
addprefix - 前缀；


var1=$(ls) ,echo $(var1)

－－－－Makefile 中　mkdir -------
optimaze for code ; 
-O equates to -O6
peripherals (volatile data) can be mapped to a non-cacheable region

---ccac makefile---
all:p_test_hss.elf

p_test_hss.elf:p_test_hss.o
        ccac -av2hs -o "$@" "$<"

p_test_hss.o:p_test_hss.c
        mkdir dep;  # create .u depency files in dep/ Dir;
        ccac -av2hs -o "$@" -Humake -Hdepend="dep" -c -g "$<"
clean:
        rm -rf *.elf *.o dep/*.* *.u

vpath %.c $(srcdirs) $(_PSP_LIB_DIR)  : 　search pattern in specific path 
VPATH = src:../headers    : search path with : delimiter; 

--- Compile HS in ccac_--- 
S1: > ccac -arcv2hs -o ccac.o -c ccac.cpp : get obj for Linker; 
S2: > ccac -arcv2hs -o ccac.elf ccac.o : get .elf
S3: > mdb -arcv2hs -cl -run ccac.elf : Run the .elf in mdb ; 
tcf:
ccac -tcf=%win%\tmp\tool_config\arc.tcf  test.c -o test.elf 

---mdb_ debug---
---ssi macro to exit:
cond_macro show_ssi pc_exit_addr
evalq $i=pc
while($i != $pc_exit_addr){evalq $i=pc; ssi;}
endm

restart
run
evalq $pc_exit_addr=pc

restart
log log
show_ssi $pc_exit_addr
log off



mdb> ssi sso isi iso  
        /r ssi 4 ;  
fillmem 0x-FillValue 0x-From 0x-size; 
fillmem $1 $2 $3
mem $2 
prop use_aux=0x0004,aux_0x0004 : gives AUX a name; 
eval aux_0x0004
evaluate $put_bank_reg(1,3,0)  : change addr 3 with value 0
evaluate $read_byte(0x1000)  :read from memory in byte ; 
evalq $mem_nu=0x8888;
eval *(long*)$mem_nu=0x20_20_10_10  , byte = unsiged int ; 

memory main; 

memset 0x55(addr_start)  0x03(set value) 512(size of byte)
/c mems 0x12 0x10000 22 ; search pattern 0x12 from 0x10000, size 22; 
module --> get each segments, .txt .what?

emem 0x99 0x2222 ( set 0x99 with value 0x2222, then show them)
read stat32.txt  ; P366
---interrupt---
evaluate stat = stat | 0xC000000 // Enable interrupts
evaluate tctl0=3 ; 
evaluate timr0=tlim0

timer 0 is vector 3 with address 3*8 or 0x18
break 5*8 
break address, exec command
run 
evaluate timr0=tlim0

macro m_name p1 p2 p3
$p1
endm
unmacro m_name

display f1/main  ; mem f1/main
evalq $x=9 ;  evalq $x++ ; eval $x; 
eval $i =9; 
while ($i) { print ok; evalq $i -= 1;}
{if($y==1) then print it is 1; }

mdb>{reg r0; reg r1;}
eval $read_byte(0x09)   - read 1 byte from mem;  $read_short; 
$write_byte(addr, value)  and $write_short ; 
return : cause debugger to return from current function; 

ccac -av2hs -g -o ccac.elf ccac.c  ;  compile ->build
mdb -av2hs -cl -run ccac.elf
mdb> run |break main(func)
mdb> step |stepi |stepo 

mdb> mem | mem 0x0a 
mdb> register | reg | aux 0x04 
mdb> modules -->>.text, .data, .bss

-grep="long long" globals
/r isi 5  : repeat for 5 times ; 
/n1 mem pc : show number line 1; 

c: http://url.cn/Ny6Tha  addr alignment align


---ARCv2 disassembly ---
st_s %r0,[%sp,16]
ld_s
b_s
bl_s fun - in stack the fun ; 
j_s ：return from the call
sub_s %sp,%sp,3
add_s
-
mov  ld st 
bl printf
sub add 
st.aw %blink,[%sp,-24]
cmp %r0
cmp_s %r0,11
bne_s 
ld.ab %blink,[%sp,20]
.cfa_offset {r3, r2, r1}, -12 
---
http://url.cn/LlXEfT 　callback function example 
int fun(void); 
int fun(){
printf("- in fun()\n"); 
return 0;     
}
typedef int (*FUN)(void) ; 
int main()
{
    FUN pfun = (FUN)fun; 
    printf( "%p\n", (int)pfun ); 
    (pfun)(); 
    return 0; 
}

---
---ARC c/c++ ref---
struct my_stru{
int i; 
int j; 
int k; 
}stru_0={.j=99, .k=88}; 
struct a id_a ={ x: 11, y:111    };

int arr_a[20]={[5...8]=6}; 
in main: 
int k= stru_0.k; 
C99 case 'A'...'Z': {do; break; }
---END mdb debug---

---ccac -S -Hanno--- assembly and source code
ccac -Hanno -S test.c   +++=>  test.s , 


---main.c and f1.c --- must *.c not *.cpp---
//main.c
extern void f1();
int main(int n, char ** v) {
 f1();
 return 0;
}
//f1.c
#include "stdio.h"
void f1() {
 printf("=== f1() ===\n");
}
---
---gcc_ g++---
gen map :  gcc test.cpp -Wl,-Map,testgcc.map  
gcc -MM main.c -get dependence file ;
gcc -c foo.c bar.c  && ar crs libfoo.a foo.o - get libfoo.a with ar binulitls;
gcc -o main.exe -L.    main.c  -lfoo  : order of .c and lib_files;
ar x libc.a ----- Extract files to *.o ; 
ar t | ar d --- table and delete *.o ; 

---Libs name---
aom : automatic overlay manager  ;
crt : C Runtime 
angeltim1 : Xtime0 ; 
libcct.a meteware c++ compiler libs
libstlex : exception ; 
libhlt.a : hostlink lib ; 
libfpud.a : double float unit; 
libmwcl.a : mw compactLib; 
---

in order to cygwin with arcdev4:
I need: ssh  lftp; 
---
hcac : compiler C/C++ for arc series ： From C--> .o && .out Files

hcac.exe -arc600 -g -Hnocopyr -o hello.o -c hello.c  ｜№：
hcac       -arc600 -o hello.out hello.o 
mdb -a6 -run hello.out
- Simplify:  
hcac -o a.o -c a.c
hcac -o a.out a.o
mdb -run a.out

 Another way to implement this:
----
mcc -o a.elf a.c   ||  mcc -arcv2em -o main.out  main.c  
mdb -run a.elf
----

Host Timer used for real time system;
--------
sc_clock clock1("clock1", 20, 0.5, 2, true);
This declaration will create a clock object named clock with a period of 20 time
units, a duty cycle of 50%, the first edge will occur at 2 time units, and the first
value will be true.
--color---

cp /etc/DIR_COLORS ./.dircolors;  then edit it  .dir 01;35   # directory  -> , and include it to .bashrc ; 
     http://url.cn/QrnNFb show DIR_colors
vim comment change color:
cd && vim .vimrc  add highlight comment ctermfg=6 / green;
---vim_ substitute:---
-in cygwin cmd -
ctrl + w : backspace a word ,  alt + D , Delete  a word ; 
comment:      :%s/^[^I ]\+/#/g   ;   %s/^[^I ]\{1,}/#/g   ; 
vim regex vs Perl regex ; 
sub e.g. :  %g/^$/d; 
                %s/\(.*\)$/\1/g    ; 
格式化全文： gg=G
serial op:    

%s/^[\t ]\+//g|%g/^$/d   => gg=G ; 
use perldo in vim :
perldo s/^\s+//g ; 
-vim edit binary files-
xxd test.bin
 xxd -i o.txt    # get include c char array 
vim -b test.bin 
:%!xxd   -> edit -> :%!xxd -r -> :w ; 

::vim input special char
insert mode -> CTRL+K + <CODE> , 0M -> "●  " ０m-> "○  ”

--endvim_
autocomplete: ctrl + N and Ctrl +X   --Vim

---module---
use :  module list   to get all the server app;  then which vcs??
sc_bv< 256> data5;   data5.to_string(SC_HEX) --　Hex for viewing
source /global/etc/modules.sh  #if in script , must add 
module available architect; 
module unload architect ; 
module load architect/2014.03 : to do this, set the shell ENV; 

module would affect ENV like : LM_LICENSE_FILE & SNPSLMD_LICENSE_FILE ; 
---




server @ int : typeface and keyboard mapping
courier 14 , deleteKey: escape sequence; 

du -ch nSIM | grep "total"
beta test - customer ; 

clipboard from system to VIM: ctrl+shift+V
OR:      mouse select and in system , middle key mouse

－－－
Perforce server operation:
need .bashrc ,to add P4CLIENT=linqi
>p4 client , edit the vim FILE, 
add the tail like this:   
//dwarc/nsim/src/... //linqi/...
then: 
>p4 sync
--mount VBOXaddition.iso failed, solve: eject vboxaddition,and re-add addition.
---My ENV List---

---shell .bash_aliases:---
  alias perlbc=" perl -e ' map{eval \"print \".\$_;print \"\n\";}<>; ' "   all the {$,"} be Escape Char; 
-

apt: 
apt-cache search something 
   apt-install: alias , apt-get install 
sudo apt-get update 
dpkg -L ia32-libs    # where is ia32-libs 
# apt remove 
sudo apt-get purge mongodb
sudo apt-get autoremove mongodb 
-
bakup source ,  update  /etc/apt/sources.list , use 上交源, then sudo apt-get update, then xxx install ia32-libs 
-
stn +2 : alias , shutdown in 2min   
CREATE symbol link for gmake:
ln -s /usr/bin/make　/usr/bin/gmake
ln -s old_file new_lnk 

diff t1 and t2:  vimdiff txt1 and txt2;

under Ubuntu g++: 
g++ test.cpp
---test.cpp---
#include <stdio.h>
#include <iostream>
using namespace std;
int  main(){
cout<<"Hello world from cout"<<endl;
printf("Hello world from printf\n");
return 0;
}//---END---

find ../ -name '*.c' : find_ all the file in a dir;
find . -type f -exec grep string_TAG {} [SPACE_HERE] \; # find file type 
find_by_name '*.bat' -exec dos2unix {} \; >/dev/null 2>&1        # find then -exec 
find_by_name '*.bat' -exec ls {} \; -exec ls -l {} \; 
find_by_name \*.mk 
-
under Linux, gcc include file loc:/usr/include/c++/4.6 e.g. <iostream> usin...

ESC==0x1B; 
---
typedef char *pstr; 
pstr id_pstr; 
typedef char LINE[88]; 
LINE text;  
text[0]='A'; 
printf("%s\n",text); 


-
---
Event was traggled by user, while the MSG is sent by the SYSTEM.

---Link script---
Right: 
MEMORY {
RAM: ORIGIN = 0x0 LENGTH = 1M
}
GROUP SIZE(100K):{
*(TEXT) : {}
* (LIT) :{}
} =0x1111 > RAM 
If not fill , then fill with 0x1111; 
_TIMER_GET  --- _lr ( 0x21 );
---
timer AUX
if (countup==0) {
        _SR(0, AUX_TIMER_CONTROL); /* don't enable interrupts */
        _SR(TIMER_WRAP, AUX_TIMER_LIMIT);
        _SR(0, AUX_TIMER_COUNT);
    } else {
        _SR(REG_CONTROL_IE_BIT|REG_CONTROL_NH_BIT, AUX_TIMER_CONTROL);
        _SR(TIMER_WRAP, AUX_TIMER_LIMIT);
        _SR(countup, AUX_TIMER_COUNT);
    }
---Interrupt---
void _Interrupt _timer_isr(void){
counter ++ ; 
}
volatile uint_64 counter; 
    _int_install_isr(VECTOR_TIMER, (isrfunc)_timer_isr);
    _int_set_priority(VECTOR_TIMER, 0);
    _timer_initialize(TIMER_COUNTUP_VALUE);
read couter every time...
---Timer Go!!!---

---PS_ powershell---

 $x="abc"; $x*22        # "string" * num =
[math] | get-member -static    #get all the method 
$result=[System.Math]::Pow(2,3)    #math 
[math]::log(8,2) ==3    #log2(8)
[math]::log( [math]::e )    #e is base
-
[System.Convert]::ToString(16,2);    # convert to binary num 
[Convert]::ToInt32("10011010010",2);     #convert to oct 
-
invoke-item (ls|grep .exe| repl '^.*C' '.\C' X)    #run .exe in ps

powershell.exe -command " & { help;}"        # use powershell in cmd.exe
powershell.exe -file  my_ps1.ps1                     #use script of ps1 in cmd.exe 
cmd /k call 2.bat        :: call and keep this console 
-
 split-path "c:\arc\software\mqx2.6*\*.lnk" -leaf -resolve    # -resolve, parsed leaf , and split-path "PATH_XXX\tmp"  => path only 
"a , 5 b , 8c" -split "\s+,\s+", 0 , "regexmatch"  # split , cannot use pipeline , no greedy '?' 
-
$here=@'
a=b
c=d
'@
$hash=$here|convertfrom-stringData   :: got it to hash ,  $hash.a =b 
$here = ls     :: get file name ;    :: refer $match[]
-
 "a : 5 b :c" |repl '\:' "," X    #in ps, " " is not acceptable    "," right, but "", wrong 
"a : 5 b :c" |repl '()\:' "`$1" X      # have something,
"a : 5 b :c" |repl '\:' "  <TWO_SPACE>" X      # have something,
echo "help; me" | repl "(h..p)" "`$1`$1me\n" X       # use backq to  get $ , X = extend ; 
-
for( $i=0; $i -lt 3; $i++){ "hello" ;  }  
if ("a" -eq "a") { "hello"}  
if ("a" -ne "a") { "hello"}  
if ( ) -and ( ) {  xxxx ; }
 [int32[]]$a=(1,2,3); foreach( $e in $a){"$e"}    ;  :: we can have class; 
$a[-1..($a.length-1)]      :: display selected element ; 
$a + = $a   :: cat array 
remove-item variable:a     :: clear the $a array 
$a=@{k1=1;k2="a2"} ; $a+=@{3="ENT"}    :: hash table 
[string]$a=3; $a+=9; $a     :: the first letter is used to judge for default type ; 
"hello" -cmatch "(l{2})(\w)" ; echo $Matches      :: -cmatch -imatch ; get ll , $match [0] [1] [2] , 0 == full matching list 
"Book" -Creplace "[A-Z]", "BIG"     :: replace ; 
$new_string=(cat txt.txt)      :: get file to new_string 
set-alias run Invoke-expression ; run $cmd       :: run $cmd 


---dos_  bat_---
-dos sleep   
  // sleep for windows, see: https://zhuanlan.zhihu.com/p/25412671 or see $perl _p
-appwiz.cpl  :: programs and features 
-dos format to fat32-
format F: /FS:FAT32
-
-dos get all disk name-
diskpart ,
DISPART> list vol
also:
diskpart /s bat.bat
bat.bat content: list vol 
- dos mklink 
mklink /J new_lnk_name c:\arc
-
-view all tcp/ip  udp port 
netstat -an 
-
-show display card-
Dxdiag 
-
-dos file diff- 
fc fc.exe fc_1.exe
fc 1.txt 2.txt 
-
::7zip 
7z a -t7z files.7z *.txt 
7z a -parc EULA.pdf.7z EULA.pdf
7z x arc.zip  -o.\tmp -y > nul 
7z x -parc xcam.7z -oc:\arc -y > nul
rmdir /s /q c:\arc\arc\tmp
-
WMIC product get name , version >  wmic_full_log.txt       :: get all the windows products 
-
::timediff in bat ; 
::@echo %time%
set time_end=%time%
::---
::dosomething here
::---
::@echo %time%
set time_end=%time%
::---time diff count--- 14:28:37.04 ::2015-12-10
::echo.-- Split the date into h,m,s,mi-s, using slash and space as delimiters
for /F %i in ('ls') Do echo %i    # get the command 
for /f "tokens=1,2,3,4 delims=:. " %%a in ("%time_begin%") do set hour_0=%%a&set minute_0=%%b&set second_0=%%c&set millisecond_0=%%d
::echo.hour_0        : %hour_0%
::echo.minute_0      : %minute_0%
::echo.second_0      : %second_0%
::echo.millisecond_0 : %millisecond_0%
::14:28:37.04 ::2015-12-10
::echo.-- Split the date into h,m,s,mi-s, using slash and space as delimiters
for /f "tokens=1,2,3,4 delims=:. " %%a in ("%time_end%") do set hour_1=%%a&set minute_1=%%b&set second_1=%%c&set millisecond_1=%%d
::echo.hour_1        : %hour_1%
::echo.minute_1      : %minute_1%
::echo.second_1      : %second_1%
::echo.millisecond_1 : %millisecond_1%
set /a diff_minute=%minute_1%-%minute_0%
set /a diff_second=%second_1%-%second_0%
echo.
-
@echo off

echo %1|findstr "^abc" >nul

if %errorlevel% equ 0 (

echo ok

) else (

echo not ok

)
-
 find /v /c ""  linqi_ipconfig_all.txt | find ": " |repl "^.*\: " "" X     :: got files lines 
ipconfig /all  Physical Address 
-
reg query "HKEY_LOCAL_MACHINE\SYSTEM\ControlSet001\Control\Session Manager\Environment" /v Path    :: dos reg query , reg add , reg del
repl "%%" "_"  > txt.txt   :: dos repl % to _
-
%0%   ::dos script folder 
-
powershell -command "& { echo "%windir%`n`nhelp me "; }"    #dos + powershell.exe , `n 
powershell.exe -command " & { for($i=0;$i -lt 2; $i++){ ls ; ls %tmp%\tm* } } "    #powershell in cmd.exe 
-
explorer.exe /e, c:\arc     # open folder 
-
dir /s /b /A-d | p4 -x - add >> %logs%   :: display all the files, exclude folder
timeout  /T 300 /NOBREAK   #dos timeout , for waiting ; 
call test.bat  # call , not return , but continue next statement ; 
-
rename D:\home\linqi\cyg_pro\bin_RENAME bin   :: dos mv 
-
wtee -? :: wtee_doswin_tee_linux http://url.cn/Lfgzde 
-
at 6:29PM "test.bat "  :: dos at    
---windows if ?
where $path:cc*.exe   # equal as which ccac in linux ; find App 's dirpath ; 
VER     # get system info=Microsoft Windows [Version 6.1.7601]
set |findstr /I cmd.exe    # cmd.exe  , if is Win or linux ; 
-dos string-
-
dos unset :
set var=
-
set var=123456789

set var_0=%var:~0,1%      -> var[0]; 
set var_1=%var:~0,-1%     ->var[0..eof-1]; 

-
- map net disk -
subst X: c:\usr\linqi  ~ subst /D X:  -    map drive with alias; 
net use "V": \\us01cm02-t1-lif5\us01home41\linqi  ~ net use /DELETE V:  ; 
df -k  #get the disk path ; 
net use  W: \\us01cm06-t1-lif44\arctools\marcusm\Release  # 
net use P: \\us01cm04-t2-lif45\us01dwslow025\arc_test\linqi && net use V: \\us01cm02-t1-lif5\us01home41\linqi
net use S: \\us01t3filer08\us01dwt3p065\StagingArea
net use J: \\arc-dev0\Dev tools\jd_
diff -uwqr 

:: dos if admin 
net localgroup administrators 
-
setx logs_p "%cd%" , 设置永久变量in DOS; 
attrib -H *.* , unset all 隐藏属性；
systeminfo|findstr /i memory     ; DOS get memory ; 
findstr /RI "go[a-z]o" txt.txt  :Regex in dos ; 
findstr  "im wait" txt.txt         :: if it is im or wait, then pick out 
 Z    :: dos set var:
doskey LL= dir /B  ; set alias in dos  ;
dir /O-E ;   # by Extension , sort the files in dir ; 
MS-DOS search --
in nautilus File DIR > dir /s *.c  , get all the .c file recursively ; 
DOS find: type hellojava.java| find /I "Hello"  
-
rmdir /s /q pic  ;  delete all files and dir in pic ; 
pushd C:\ARC ;   ->  c:\ARC> ;   then %cd% = c:\ARC ; 
popd == cd - ; 
%1 = @ARGV[0]  in  perl ; 
%~dp[0-N]  is @ARGV[0] root0:\root1\root2  ; 

-
dos 并行；
@echo off
echo Starting bat1
start "" "bat1.bat"
echo Starting bat2
@echo off
start "" "..\arch_bat\HS234_base.bat"

-dos for , get all ___files___
for /F %%i in (txt.txt) do (
...
)
for /F  %%i in ( txt.txt) do echo line: %%i 
 for /F "tokens=1-8* delims=" %%i in (txt.txt) do set varx=%%i && del txt.txt
for /L %%i in (1 1 5) do echo %%i  ::/L (1 1 xx) number 
for /R %%i in (*) do (
@echo %%i
@echo this
)

if not exist  %filename%    :: for dir>    if  exist %perl _p%\ ( ) 
if exist filename del filename 
-
---dos if else ---

if not "%SUCESSFUL_FLAG%"=="BUILD SUCCESSFUL" (
printf "- build failed\n"
popd
GOTO :EOF
)

if errorlevel 0 (echo right
)else (
  REM wrong
)
-
set /a x=%right_bin%+%right_ide%    :: dos number calculator 
echo %x% 

if %right_bin% equ 1 (
if %right_ide% equ 1 (
echo right
)
-
setlocal enabledelayedexpansion
for /F "usebackq tokens=1-3 delims=./-;" %%i in (`date /t `) Do @echo %%i  %%j %%k  :: usebackq , `?my
-
cygwin 环境下 运行MS-DOS cmd.exe : 
  > cmd /C go0  , go0.bat is windows batch file , help cmd ; 
> $echo "obase=16; ibase=16; 111+222"|bc   bc set 16进制；
-about net---
netstat -ano   ::  netstat -ano   |grep_ port  from taskmgr, you can know that by set PID 
netsh dump   ::    get my ipaddr 
tasklist | grep_  /i skype 
taskkill  /F /FI "imagename eq nginx*"
tasklist /FI "imagename eq nginx*"
raspberry ip : arp -a ; 



---Perl_ Learning--- 
- perl substr :
$a="abc"; @arr=split m// , $a;  print @arr[0],"\n"; print substr($a,0,1);    #a
- get len : length 
$a = "abc" ; length($a);  # 3 

---perlembed 
cc -o interp interp.c `perl -MExtUtils::Embed -e ccopts -e ldopts`    # build 
when used on Ubuntu 16.04 ,I need first locate where the libperl.so is 
cd /  && find_by_name 'libperl.so*'   2>/dev/null    : to get libperl.so locate , then set LD_LIBRARY_PATH of it 

see : https://zhuanlan.zhihu.com/p/25591073  
how to build perl5? https://perlmaven.com/how-to-build-perl-from-source-code  -Dusethreads
-
- perlcc 
cpan > install B::C
then in root:
perl Makefile.PL
then :
sudo make install 
then which perlcc
:
usage:
    perl -MO=C,-otest.c test.PL     # from perl to C 
    perlcc test.PL -o test.plc 
    ./testplc 

-printf in perl  %22s
printf qq(%%33s%%33s\n),qq(GROUP_NAME),qq(FAILED/TOTAL : PASS_OR_FAIL);
printf qq{%-33s\t%-5s%-22s\n}, qq{- after changing to "+" "-"},  qq{:}, qq{  $m};
=> 
-dancer2_ ---
see readme in : 
    http://search.cpan.org/dist/Dancer2/lib/Dancer2/Core/Request.pm#NAME 
dancer2 gen -a webapp
plackup -r bin/app.psgi        # start listening
# in lib/webapp.pm , routers :
get '/test' => sub {
    my $test = qq(Hello World from /test);
    return  request->{env}->{SERVER_PORT} ; 
};
# will get Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:43.0) Gecko/20100101 Firefox/43.0 , and the 
-
---curl_ wilddog_ ---
http://user.qzone.qq.com/2589079022/blog/1466522279 wilddog trigger
curl --get --include 'www.somewhere.com&api?'     #get json  
curl -G 'http://xxx/summary_report.html'  -u 'linqi:xxxtask00'

curl -X POST '0:5000/test?v0=k0&v1=k1'
curl -X POST 'url?v0=k0&v1=k1'
curl -X GET 'url?v0=k0&v1=k1'
curl -d 'name=TLQ&birthday=19881110' 'url/test'

then in dancer2:
lib/webapp.pm : 
get '/test' => sub {
    my $test = qq(Hello World from /test);
    Dumper(request) ; 
};

-
- perl number cvt 
print oct("0b110")   
print oct("0xff")   
$bin=0b1000;$dec=sprintf("%x",$bin);print $dec;     # 0b -> 0x 
int($attr->[2]) oct($attr->[4])
binmode($in);
-
- perl signal -
$SIG {INT}    = \&report;
$SIG {INT} -> ();
-
all the pm is here: /usr/lib/perl5/5.22
-
perl bclub_(\@,\@)  http://url.cn/PjGu1m 
perl example http://url.cn/RlHusP  perl 
http://url.cn/MPxUg4  : perl cmp_ver_0_1 
http://perldoc.perl.org/perlre.html   perl regex doc man 
http://user.qzone.qq.com/2589079022/blog/1465313365 perl chinese 
http://user.qzone.qq.com/2589079022/blog/1470142076   perl _multi_thread_create_thread    
http://user.qzone.qq.com/2589079022/blog/1473315053    perl yaml 
-perl require()
require('test2.PL'); 
&test2_fun();
&test1_fun();
# file test2.PL #
sub test2_fun(){}
return 1; 
# end 
-
-
perl iterator 
sub upto{
        my ($m, $n) = @_;
        return sub {
                return $m<$n?$m++: undef;
        };
}
my $it = &upto(3,6);
while( my $a=$it->() ){
        print $a;
}
-

- perl lamda sub fun - 
my $actions = {
        '+' => sub { $_= "@_" .'+'."\n" ;},
        '-' => sub { $_= "@_". '-'."\n" ;},
        'default' => sub { $_= "@_". 'default'."\n" ;},
};
my $funname = "";
$funname = $actions->{'+'} || $actions->{'default'} || die "die";
print $funname->("yes"); ;
$funname = $actions->{'++'} || $actions->{'default'} || die "die";
print $funname->("yes"); ;

-


-
perl ascii 
my $num=ord 'E';
print "The ASCII is : $num\n";
my $word=chr(69);    # ' : chr(39) ;  " : chr(34)  47:/   92:\  chr(36) : $ 
$twoints = pack ("i*", 0x61, 0x62, 0x63 );  # --> abc 
$bin =sprintf("%b",$dec);         # 10 dec -> binary 
$bin = 0b0101;   $dec = sprinf("%d", $bin );  print $dec; 
perl -e '$a= unpack( "B32", "abc"); print $a;'    # H32 

- 16 进制 -
printf '0x%*v02x',    ' 0x',    "abcd";
-
-perl EOF
$origHtml = <<END;
<h1>h1 content</h1>
<div>    div test    <div>inside level 1 div</div> </div>
END
; # this is really important 

-perl copy 
use File::Copy;
copy( $original, $new_copy ) or die "Copy failed: $!";        # new_copy can be a dir 
-
- perl remove duplicated items -
@array = grep { ++$hash{$_} < 2 } @array;
-
- # sort by value , number <=> , if string, cmp 
foreach my $key( sort {$hash{$a}<=>$hash{$b}} keys %hash){ 
  my $value=$hash{$key}; 
  #do something with ($key, $value) 
}

 sort {$a <=>$b} @array ;         # perl sort number 

my @sort_keys = sort { @hash{$a} <=> @hash{$b} } keys %hash;     #default , get 0, 1,2,3,4 
map{}@sort_keys; 

-
#perl automatically test , unit 
use Test::Simple tests=>2;    # the cases num 
ok(&ok_test0() eq "NULL",  "test ok_test0");

-
- Dumper jason
use Data::Dumper;
print Dumper($decode_str); # need print  
print $from_jason_to_perl _hash->{results}->[0]->{location}->{name}; 
-
Win32::MsgBox($id_msg);    #m Win32
sleep(10);         # sleep 10s 
timeout 5   > nul  #sleep 5s       
-
---perl module: Jidor.pm ---
### _perl.PL ###
BEGIN{push @INC,@ENV{perlp};}
use feature qw(say);
### Ji-dor.pm ###
#!perl
use feature qw(say);
use strict;
package Jidor;
require Exporter;
our @ISA=qw(Exporter);
our @EXPORT=qw(Jidor_Usage subst_dot subst_foreach);
- End pm

sub fun($){
@_[0]='help me';
}
fun($str);   # $str has changed ! ; 
-
say `cat $file_name|grep -A5 -P '\^View\:'`;     # grep -P in perl ; 
my @old_ver_all= `cat $iap_xml_file |grep -P 'arch_\\d\{4\}' `;  
cat *linux.iap_xml |grep -C2 -P '(\>3\<)|(\>2014\<)'
-
 $^O   #perl get OS::   upcase  -> linux, win32 ; 

---perl get dirname---
-    1    -
#!perl
use feature qw(say);
use File::Basename ;    # get dirname suffix and path
use Cwd; 

use FindBin qw($Bin);
my $SCRIPT_ROOT = $Bin;

use File::Spec;
my $SP = File::Spec->catfile('XX', 'XX'); 

use File::Copy;
copy( $original, $new_copy ) or die "Copy failed: $!";

sub get_SP(){
# get file path separator
use File::Spec::Functions;
my $SP = catfile('XX', 'XX'); 
$SP =~ s/XX//g;    # on Linux will get "/", but Windows, will get "\"; 
return $SP; 
}

sub get_script_root(){
use FindBin qw($Bin);
my $SCRIPT_ROOT = $Bin;
return $SCRIPT_ROOT; 
}

--perl find ---
#!perl
use File::Find;
find (\&print_it, '/home/linqi/perl _p/test_perl');
### sub list ###
sub print_it(){
print "$File::Find::name", "\n";
}

-

# say $0;  say __FILE__ ;      say __LINE__ ;  # say $0 = say __FILE__  
# /cygwin and C:\ both OK
# /cygwin/c/arc/software/build/_perl.PL
# read soft link :
-
use Cwd 'abs_path';

use Data::Dumper;


my $lnk = '/slowfs/us01dwslow025/mwdt_builds/latest/linux/ARC';
print abs_path($lnk);
-

use File::Spec::Functions qw(rel2abs);

use File::Basename qw(dirname);

print dirname( rel2abs( __FILE__ ) );

my $full_path_of_curdir = File::Spec->rel2abs(__FILE__);
my $dirname_of_path=dirname($full_path_of_curdir);   #../../build
my $basename_of_file_path=basename($full_path_of_curdir);   # _perl.PL
my ($base_name, $path, $suffix) = fileparse( $full_path_of_curdir,qr{.PL} );     #$path = ../../build/

-    2    -
perl -e " $_=q(c:\a\bc\dcef\ghefh\dkfj);  ; s/^(.{2})(\\.*)(\\).*$/\1\2/; print ;"    #perl get dir 
-
---perl getopts---
#!/usr/bin/perl 
#perl _perl.PL -o || perl _perl.PL -d d_value 
use Getopt::Std;
%options=();
getopts("od:fF",\%options);   # if with : then must need a param_value
# like the shell getopt, "d:" means d takes an argument 
print "-o $options{o}\n" if defined $options{o}; 
-
---perl shell---
 my @cmd=qw(
 perl -e 'print qq(this is perl \n); ';
 perl -e 'print qq(this is perl \n); ';
 perl -e 'print qq(this is perl \n); ';
 );
$_=`@cmd` ; say ;
system("@cmd");
my $cmd_ans=qx(@cmd);
---
---perl eval example---
my $fun=q(fun);
my $_1=q(_1);
 $_=$fun.$_1;
eval $_; 
sub fun_1(){
say "this is a line\n"; 
}
-
@hash{c}||='vc';  #%hash key not exist, then add into
# @ARGV[0] ||= "default"; 
my $var=@hash{key} // "no exist ";     # if not exist 
say %hash;  #print hash
@hash=%hash;
say "@hash";   #a va b vb...
---perl dataTable driver---
my $t_drv=  (
'15g' =>sub{ say "15g"  ;  },
'2'=> sub{ say "2";   } ,
); 
$t_drv->('15g'); 
-
---perl ref example ---
-
# perl multi loop hash 
$VAR1 = {
          'results' => [
                         {
                           'last_update' => '2016-01-05T18:00:00+08:00',
           
                           'location' => {
                                           'country' => 'CN',
                                           'id' => 'WT3Q0FW9ZJ3Q',
                                         }
                         }
                       ]
        };
print $from_jason_to_perl _hash->{results}->[0]->{location}->{id};

print scalar @{ $hash_{'-g'} };         #get length()


-
sub test(\%hash){
my $hash_=@_[0];
@$hash_{"a"}="new_a_value";
} 
-
return [$_0,\%hash];  #ret of  ret_2_arg()
};
my $a=ret_2_arg();
say $a->[0];
my $hash_get=$a->[1];   #must have this $=$->; 
say keys %$hash_get; 
-
$_0++, $_1++;
-
qx(perldoc -t -f $_) ;  avoid \oxff; 
perl -e 'print qq(this is a line\n) '
perl -e 'print q(this is a line\n) '    q=' qq="
-
$_="0 1 2 3 4 5 6 ";
my @arr= (split ) [2..5];
@arr_2=@arr[2..5]; 
-
# for hash : 
@hash{'1','aaaa'};
%hash{"1","2"}  ==> get 4 element 
-
@arr[0..1]=("help", "me");  #insert into@arr , two e; 
@arr=(2,3,4,"END");my @arr_inner=(1..@arr);@arr_new=@arr[@arr_inner];print "@arr_new";         #arr splice ?
-
perl reference---
multi demension array:
-hash point to arr; 
%hash=(
1=>[1, 2, 3, 4],
2=>[4 ,3,'a2',1],
);
say @hash{2}->[2]; 
-
my @arr=(    #paren  this is real @array, while [ [],[] ] not, need -> to deconstruct
        [1,2,3],
        [0,4,7],
        [5,6,8],
);
$#{$arr[0])}        #for each dimention, we have the length:

say $arr[1][1] ; # not ->, define as @, so not need to deconstruct 
-
---2nd: use $a->[2][3] to visit arr e; ---
my $arr=[ #not real @arr, since $ ; 
        [1,2,3],
        [0,4,7],
        [5,6,8],
];
say $arr->[0][1]; 
-

---perl STDERR---
my @perl-cml=qw(perl bak.perl.PL);
open STDERR, ">",'/dev/null';
#        open(TMPOUT,"+> " . ($tmpout = "a2pout.$$"))  
system(@perl-cml);
close STDERR;
-
@arr=grep {$_%2}@arr; 
open FP, '<', '_perl.PL';
@arr=grep {m/abc/}<FP>; 
-
cat _perl.PL | perl -e ' @arr =<>; print @arr ; '; 
-
---perl Regex---
-tr-
tr/5/A/c   , if  map(^5) -> E ; 
tr/5/A/d   , match/5/  lines and left, then map(5)--> A ;
map(55555) -->A; 
-
perl format: 
s/\W/ /g;
s/\s+/ /g;
-
use Carp; 
carp $_;     2 at _perl.PL line 11 ; 
perl substitute: $mystring =~ s/abc/ABC/g; 
perl chdir($dirname); 
mkdir -p dirname , not prompt ; 
perl  printf("%.2f",$num); 
my ($firststr,@_2th_arr)= @_;  two arguments ; 
my $perlp=@ENV{"perlp"};    Paren; 
=pod
...
=cut 
1.if (){} elsif(){};
2.sub_fun($a,@array_a); 
3.=pod ~~~ =cut; 
4.if((defined(@ARGV[0]) && defined(ARGV[1])); 
5.open IN, '<', "$files";
@all_files=<IN>;
close(IN); 
-
1.windows path delimiter is ' \ ' ; 
-
2. perl chmod 0755 != shell chmod 0755; 
# perl has space and change their permission 
alias find_by_name='find ./ -name '
find_by_name '*.lnk' | perl -e ' @arr=<>; map{chomp;q(").$_.q(");}@arr; chmod 0755, @arr;'  

> chmod -R 0755 test/  ;   -R , Recrusively ; 
3. select(undef,undef,undef,0.05) , appropriate sleep time; 
4.perl sometimes can't '\' ,correct ?
5.if ( !-e $file_name) Capitial is the same.exit
    if ( -d $filename)    if ( -T $filename)  if ($name eq '') ; 
if ( $num <= 5 ) {}            # perl compare num 
6. grep(!m/ARC7/ && !m/em/\d/, @cmp_file);
perl , `ls`  vs system('ls') system ==Real time return ; 
do 'perlname.PL' == system ('perl perlname.PL'); 
" perl  _perl.PL dir0 dir1 " ; 
system("$cmd_perl","$arg_file","$DIR_0","$DIR_1");
open FP, '|-', 'date';
my $datecmd=<FP>;
-
($_1,$_2) = ($_2,$_1); # exchange to $vars
push @arr_head, @arr_tail; # can coalesce 2 @
unshift @array,4;         # unshift , opposite to push 
$front=shift @arr; 
unshift @arr,$front_ele ;     #similar to push , pop , get ($front_ele, @arr ); 
@removed=splice @arr_ori,1,2,qw(2 3 4);    # del the [1] [2], and insert qw(2 3 4), return ([1],[2])arr
@array = sort @array ; # not change ori
<per l_sort_by_user_define_function>    http://user.qzone.qq.com/2589079022/blog/1464163893
@array = (); # clear up an arr;
-
chomp(@array); #chomp each e;
perl sub_routine , can be any place;
my ($_) =@arr ; # get first @array[0];
@ARGV[0]='perl.txt'; my @arr=<> or carp "carp w: $!"; # <> can read
@ARGV[0..N];
use autodie; # in open ... or die , leave out or...
-
select FP; select STDOUT; #use FP as stdout ;
delete @hash{books_idx}; # only delete %hash e;
metachar '.' in Regex /s can match anychar;
\w will match ' _ ';
\R match Unix and Windows CR;
-
\s +=newline;
\N = ' . ' with m/matchstr/s any words include \n;
m/match/x ; # /x ignore space ;
m/match$/m ; m = multi ;
\B not boundary , antonym to \b;
-
my %hash=(); @hash{e}=undef; \
exists $hash{e} && say "exists "; \
defined $hash{e} && say "defined"; # find if exists a key;
$_ = "@arr " ; 
-
perl -e '$_=abKcd; m/b.c/; print $&; '
m/(?<lable_1>) (\k<lable>) /x -> @+{lable_1}; # add lable to $1,$2;
+? *? {1,5}? # not greedy version of Regex;

-
 cat txt.txt |perl -e '@arr=<>; $_="@arr";$i=0; while( m/(?<L1>(twarn\( (.*?) \)[^,]) )/gsx) {$i++; push @arr_out,@+{L1} ; print "$i:\t@+{L1}\n\n";} ; ;'
::not greedy try capture all the () multimatch; 
-
 perl -p -i.bak -e "s/hash/HASH/g" txt*.txt ; # perl cmd line mode ;
perl -i.bak -pe 'tr/68/SE/d' filename  # like map 8->E 6->S; 
perl naked block: my $_0; {my $_0; };
last = break; next = continue; -> LB less big ;
-
$_=""this is \n	my god's frind"; \
my @arr= split ; # = split /\s+/s if $_ only multi-space as delimiter;
perldoc CGI ; #perl help of .pm;
if(-e 'file.txt' && -w _) ; # " _" is new visit filename;
my @arr=<*.PL *.txt>; # get file list; 
-
perl file exist: 
my $file_name='file.txt'; 
if ( ! (-e $file_name && -e $file_name2)  ) {
say "not exist"; exit; 
}
---
my our local ; 
my=local , our =public ; 
---
2 @arr as param.
#!perl
use feature qw(say);
sub fun {
my($_1,$_2) = @_;

say "@$_1", " -----", "@$_2"; 
# also: my @arr=keys %$hash1; 
# fun(\%hash1, \%hash2); 
# say %hash;  

};
@test_str=qw("test" "str");
@test_arr=qw(2 3 4 5 6);
fun(\@test_str,\@test_arr);
---perl change params of @arr---
sub subst_test(\@){
my ($arr_str) = \@_;
@$arr_str[0]="this is a new el";
say "the ref is $arr_str ";
}
-

---
perl sleep 0.25s
select(undef,undef,undef,0.25);

perl array combine into one:
@array_all=(@array_1,@array_2); 
%hash_new = (%hash_1,%hash_2); 
or 
push @array_1,@array_2;
===show all file in a dir===
#perl _perl.PL *.c >txt.c 
#!perl
use 5.010_001;
$param_1=@ARGV[0];
$_=1;
@arr=();
while($param_1 ne ''){
say "------$param_1------";
$lsout=`cat $param_1`;
say $lsout;
$param_1=@ARGV[$_];
 $_=$_+1;
};
say "EOF";
===

|| && 不可{ }连用；
#---perl cmp---
open OUT, ">diff.html";
print OUT "<style type='text/css'>\n", diff_css(), "</style>\n";
print OUT diff_files('p_0903/System/ARCv2HS CCT/this.axml', 'p_0904/System/ARCv2HS CCT/this.axml');
close OUT;
#END ---
CPAN_ 自动安装模块命令
#cpan install this module:
1. cd /home/linqi/.cpan/CPAN && rm *;  #if ok, can be omit this step;
2. cpan,it will config cpan the first time;
3. into cpan's shell,cpan[1]> install Win32::Shortcut
4. successful , use perldoc Win32::Shortcut to see README of pm.
5. o conf init         # pick mirror
-

#---BEGIN---END---
BEGIN{
 say "begin---";
 $var1=9999999;
}

END{
 say "end---";
}

die "exit when END{} run ---"; 
##---
my @files=<.* *>;
say @files;
##---
chomp($_=<fp>); #no space <fp>
##---read file from fp
chomp(@lines=<fp>);
say @lines;
say reverse <fp>; #reverse a <fp>
 perl -e ' @arr=`cat _perl.PL`;print reverse @arr[0..9]; '   #cl reverse in perl
 perl -e ' open FP,"<","_perl.PL"; print reverse<FP>;close FP; '

##
#--------constant------
use constant NICE_VALUE => 10;
say NICE_VALUE;
#----------------------
use List::Util qw(first sum max shuffle maxstr);
@getshuffled=shuffle @give;
#----------------------
use POSIX qw(nice strftime);
my $today = strftime('%Y-%m-%d',localtime());

### perl timestamp ### 
sub get_timestamp(){

# perl get time, for second:
 #perl -e 'print $^T '
#1477400615

    my $time_stamp = `date "+%Y%m%d_%H%M"` if $if_windows ne "True"; 

    if ( $if_windows eq "True"){
        my ($second, $minute, $hour, $date, $month, $yearOffset, $dayOfWeek, $dayOfYear, $daylightSavings) = localtime();
        # 17 16 20 24 7 116 3 236 1
        # 2016-08-24 20:16

        my $year = 1900 + $yearOffset;
        $month = $month + 1 ; 
        $month = &add_zero_if_lt_10($month); 
        $date = &add_zero_if_lt_10($date); 
        $hour = &add_zero_if_lt_10($hour); 
        $minute = &add_zero_if_lt_10($minute); 
        $time_stamp = "$year$month${date}_${hour}$minute"; 
    }

    chomp( $time_stamp ); 
    return "report_".$time_stamp; 

}


say $today; # 2013-12-27
-
@array = (2.2222222, 1.10000000000000,3.888455455);
map{ $_=sprintf("%.3f",$_) ;} @array ;  #四舍五入；
#END---
#----------------------
sub map{
$a=$_;
$_=$a**2;
return ;
};
@array = (2, 1.1,3);
grep{ &map ;} @array ;
say "@array";
#END --------
#--grep{} @array : change @array-------
@array =qw (12 5 7 6 47 44 );
grep { $_+=1 } @array;
## in grep , use $_ , but don't change, then @array not change;
say "@array";
$a=@array[2];
say $a;
#END --------
#----------------------
## qw( a 11) 与 （11, 33.44) ;  
@arr=( 6.12 , 6.08333 );
$_=@arr[0]-@arr[1];
say ;
@arr=qw( 6.12       6.08333 );
&println();
$_=@arr[0]-@arr[1];
say ;
#END --------
#----------------------Hash Split---
%hash=(
a=>_1a, 1=>v1,
b=>_1b,
c=>_1c);
@key_ac=qw{
a
c
b
};
#or @key_ac=(a,            c    );
@arrayHash=@hash{@key_ac};
say "@arrayHash";
#END --------
#----------------------
&println();
@array = qw (abc 3 a4 dfksjfd );
my $str=sprintf ("%s", "@array" );
say $str;
@array = split / /, $str;
say @array;
#END --------
#----------------------
&println();
@array = qw (1,2, 3,4);
my $str=sprintf ("%s", "@array" );
$_=$str;
chomp;
s/\s*,\s*/,/g;
@array = split / /;
say ( @array[3] );
#END --------
#----------------------
&println();
$SIG{'INT'}='my_int_handler';
sub my_int_handler{
say "do clean up()";
exit();
};
#-
-Matrix
$a_2d=[
        [1,2],
        [3,4],
        [5,6]];
say "$a_2d->[1][1]";

-opendir readdir
mw_ver_full=$(echo $1 |perl -e 'chomp($_1=<>);opendir(DH,@ENV{prepkg}); @arr=readdir(DH);map{chomp;s/^.*v//; print if $_ eq $_1;}@arr; ')  #in shell 

opendir (fp_c, "../linqi");
local @dots=readdir(fp_c);
for(@dots){
say $_;
}
$n1=77_22.009_008;

-time in Perl; 
#!/usr/bin/perl
#print "this is perl program!\n";
use 5.010;
#open File and its properity:
open (fp_c, "txt_xx.txt");
$sz=-s fp_c;
#say $sz;
$mTime=(stat(fp_c))[9];

@files = sort{ -M "$path/$a" <=> -M "$path/$b" } @filename;  # sort by modify time 

#say $mTime;
say localtime($mTime);
 sub DateFormat
{
  local @A =@_; #YYYYDDMMHHMMSS
  return sprintf("%04s-%02s-%02s %02s:%02s:%02s",$A[5]+1900,$A[4]+1,$A[3],$A[2],$A[1],$A[0]);
}
my $fileTime=DateFormat(localtime($mTime));
say $fileTime;

-
open (fp,">txt_xx.txt") or die "not open txt.txt";
print (fp "here is the string\n");
-

－regex
~~ 智能匹配
1.$result~~ @arr , result in arr;
2.$result ~~ %hashT, $result in Keys HashT;
3.$result ~~/[a-z]/
if(my @arr=split /\s+/, $_ ) {
say "@arr";
my $_=join ":",@arr;
print $_;
}

if(my @arr=split /\s+/, $_ ) {
print "@arr";
}

#!/usr/bin/perl
#print "this is perl program!\n";
use 5.010;
while(<>){
        chomp;
last if($_ eq "q"||$_ eq "exit" ||$_ eq "n"||$_ eq ":w") ;
$spase_="\\s+";
if( / \A(?<L1>[A-Z]{2}) (\s+)
        (?<L2>\d{4}) (\s+)
        \g{L1} ($spase_)
        (?<L3>Male|Female|male|female) (\s*) /x ){
say "find the 1st: $+{L1}, 2st: $+{L2}, 3st: $+{gender}" ;
}
else {
say "your miss the match!\n";
}
}
-
{    \A : Front of line;
     \z: End of line; 
     \btxt\b  word txt word;
      
#!perl
use 5.010_001;
sub println{
say "\n---------------------";
}
#----------------------
#1 . ~~ for match
$name = "helloworld.txt";
println();
$_=$name;
if( m| \.txt \z |ix ){ #后缀.txt
say "your match:\n{PRE:${^PREMATCH}} <
${^MATCH}> {POST:${^POSTMATCH}}";
}

$_=$name;
say "match: ${^MATCH}" if( m| \.txt \z |ix );
say "match: ${^MATCH}" if( $name ~~ m| \.txt \z |ix );

print ${^MATCH} if m/(\w)(\1)/p;'           # how to use ${^MATCH}
%hashT=(
1=>11,
2=>22);
say "OK" if %hashT ~~ /22/ ;
say "OK" if %hashT ~~ %hashT2 ;
say "$ARGV[0]";  # perl _perl.txt arg0
$_=$date_d=` date `;
print ": ${^MATCH}" if ( m| \b20\d{2}\b |x) ;
#----------------------
#----------------------
$_=$ARGV[0];
given ($_){
when (1) {say 1; break;};
when (2) {say 2; break;};
default {say "default";};
}
#END --------
#----------------------
println();
@lsArr=`ls -al`;
@lsArrrwx=qw();

foreach $tmp (1 .. 100){}

foreach (@lsArr){
if( m| ^d[-rwx\+]{10} |x){
local $i;
$_=my $ma=${^MATCH};
@lsArrrwx[$i++]=$ma;
};
say "@lsArrrwx";
}
#END --------
-
my %hash_=(
        a => "b",
        c => "d"   # hash => "" ""; 
);
my @arr=keys %hash_;
print "@arr";
foreach (sort keys %hash_){
        print "$_ => $hash_{$_}\n";
}

-
#!/usr/bin/perl
#print "this is perl program!\n";
open F_OPEN ,'< txt1.txt';   ==> 单引号；
while(<F_OPEN>){
 chomp;
 if ($_){
printf "$_"."end\n";
 }#end if($_);
}
close F_OPEN;
-

@n1=("4","5");
$ans=@n1[0]*@n1[1];
print ( "ans is $ans\n, $#n1 " );
-
foreach (0..3){
print $_." " ;
}
-
$n_pop=pop (@n1);
print (@n1,$n_pop);
-
---
--tensorflow_ tf_ ---
-saver.save   !!! sometimes, need restart the server's kernel
import tensorflow as tf

# Create some variables.
v1 = tf.Variable(1, name="v1")
v2 = tf.Variable(2, name="v2")

# Add an op to initialize the variables.
init_op = tf.global_variables_initializer()

# Add ops to save and restore all the variables.
saver = tf.train.Saver()

# Later, launch the model, initialize the variables, do some work, save the
# variables to disk.
with tf.Session() as sess:
  sess.run(init_op)
  print "v1 = ", v1.eval()
  print "v2 = ", v2.eval()
  # Save the variables to disk.
  save_path = saver.save(sess, "/tmp/model.ckpt")
  print "Model saved in file: c", save_path
---
-saver.restore
import tensorflow as tf

# Create some variables.
v1 = tf.Variable(0, name="v1")
v2 = tf.Variable(0, name="v2")

# Add ops to save and restore all the variables.
#saver = tf.train.Saver()

# Later, launch the model, use the saver to restore variables from disk, and
# do some work with the model.

saver = tf.train.import_meta_graph('/tmp/model.ckpt.meta')

with tf.Session() as sess:
  # Restore variables from disk.
    saver.restore(sess,tf.train.latest_checkpoint('/tmp/'))
    #saver.restore(sess, "/tmp/model.ckpt")
    #sess.run({"v1":0})
    print("v1: ", sess.run('v1:0'))
    print "Model restored."
    pass

---
print {}.fromkeys(list_a).keys()  #python list uniq 
-
tf.train.Saver().save( sess , "mymodel.ckpt", 0)
tf.train.Saver().restore(sess, tf.train.latest_checkpoint('./'))  # INFO:tensorflow:Restoring parameters from ./mymodel.ckpt-0
-
from tensorflow.examples.tutorials.mnist import input_data
mnist = input_data.read_data_sets( "MNIST_data/", one_hot=1)
import tensorflow as tf
sess = tf.InteractiveSession()

def show_train_img(ii):
    img_all=[]
    for i in range(28*28):
        tt = int(mnist.train.images[ii][i]*255)
        if tt<int(255/2):
            img_all.append(  " " )
        else:
            img_all.append(  "1" )     
        if i%28==0 :
            img_all.append("\n")
    print ( "".join(img_all) )

show_train_img(996)



def W_b():
    return [tf.Variable(tf.zeros([28*28,10])), tf.Variable(tf.zeros([10]) )]


import tensorflow as tf
with tf.Session():
    _aa=tf.constant(2,shape=[2,3])
    print ( _aa.eval())

tf.constant( np.mat([[12,34],[12,34],]))
    c1 = np.mat([1,2,3]).astype(np.float32)
    c2= np.mat(c1.T)    
    c1=tf.constant(c1)
    c2=tf.constant(c2)
    print (c1.eval(),"\n",c2.eval())
    cc=tf.matmul(c1,c2)
    print (cc.eval())
tf.zero(2,2)
tf.random_uniform([2,2],0,100) 

-set variable 
    total = tf.Variable(tf.zeros([1, 2]))
    weights = tf.Variable(tf.random_uniform([1,2]))

    # Initialize the variables we defined above.
    tf.global_variables_initializer().run()

    # This only adds the operators to the graph right now. The assignment
    # and addition operations are not performed yet.
    update_weights = tf.assign(weights, tf.random_uniform([1, 2], -1.0, 1.0))
    update_total = tf.assign(total, tf.add(total, weights))
    sess.run (update_weights )
    sess.run ( update_total )
-


---Python_ Learning---
-__iter__()
it = [1,2,3].__iter__()
while 1:
    try:
        print it.next()
    except:
        break
-enumerate
for k,v in enumerate("abc"):
    print (k, v)

-condition express 
a=1 if a>0 else -1
- zip list 
for i , j in zip(x,y):
    print (i, "-", j) 
-subplots f1.imshow()
import numpy as np
import os
#import math
import matplotlib.pyplot as plt


_, (f1,f2) = plt.subplots(1,2)

x=np.linspace(1,255,255*255)
np.random.shuffle(x)
x=x.astype(np.int).reshape(255,-1)

f1.imshow(x,cmap=plt.cm.Greys)

for i in range(100):
    for j in range(100):
        x[i,j]=255

f2.imshow(x,cmap=plt.cm.gray)
plt.show()

-gzip 
on linux: gzip txt.txt     # => txt.txt.gz   -d => txt.txt
import gzip 
f=gzip.open("txt.txt.gz")        # if for normal file, use open("txt.txt") will be OK 
# f.seek( 0 )
b_str = f.read()        # f.read(1)
f.seek(0)
b6=f.read(6)        # b6 is a bytestring, b6[1]
id_m = np.frombuffer(b6,dtype=np.uint8).reshape(3,2)
f.close()
-
-byte
content = b'this is a byte message!'-
divmod(7,3)
(2,1)
"a"*2         # "aa"
-deepcopy
import copy
b = copy.deepcopy(a)
-
x[np.where(x>1)]          # return the array that big than 1 
np.where(x>0, x+10, x+100)  # if e >1, then set it is value e*10 
- time 
import time
x=time.strftime("%Y-%m-%d %H:%M:%S", time.localtime())
print(x)
-
-class oop 
https://zhuanlan.zhihu.com/p/26131691
isinstance(id_b, B)

- end class 
-sklearn normalize and verify
def standard_scale(X_train, X_test):
    #import sklearn.preprocessing as prep 
    preprocessor = prep.StandardScaler().fit(X_train)
    X_train = preprocessor.transform(X_train)
    X_test = preprocessor.transform(X_test)
    # X_train_R0=preprocessor.inverse_transform(X_test)    
    return X_train, X_test

X_train_ = np.linspace(1,9.2,6).reshape(3,2)
X_train_ += np.random.random([3,2] )*7
Y_train_ = X_train_
X_train , Y_train = standard_scale(X_train_, Y_train_)
print (np.mean(X_train,0))  # should be [0,0]    , the "0", it is cols 
print(np.std(X_train,0))  # should be [1,1]

-binary bin
print ( 0b111 ) 
str_bin = bin(7) 
a =int( bin(7),2 )        # change back  or use: 0b100+0
-see all locals 
dir()
id(a)     # get the location of a var 

-time 
start = time.clock()
end = time.clock()
print (end-start)
-
-Error
raise  ValueError('- only entropy!')
raise Exception(" ex_ " )

-
-import matplotlib.pyplot as plt
import matplotlib.pyplot as plt
ll = [1,2,3,4,3,2,4,1,1,2,]
len_ = len(ll)
plt.hist(ll, bins=len_)
plt.title("title")
plt.xlabel("x-label")
plt.ylabel("y-label")
plt.figure(figsize=(6,6))     # let x,y_axis the same size
plt.xticks([0,1,2,3,4,5,6,7,8,9])
plt.yticks([0,1,2],["y0","y1","y2" ])
plt.plot( x, y )        # must be list( np.mat([1,2,3]).flat ) 
x= np.array(range(10))     #   => [int64]
plt.fill_between(x,y, 0, color='green')


plt.show()
-import pandas as pd 
- from list to create df 
df = pd.DataFrame(  [ [1,2,3], [2,2,4] ] )
print (df)                 
for k,v in enumerate(df[2]):
    print ("k,v " + str(k) + " " + str(v))
-	
-read_csv
b=pd.read_csv("txt.txt", index_col=0)         # col = 0 is Line tag
x  = pd.read_csv( "txt.txt",sep=" ", header=None)
the txt.txt>
,id,s
L0,_id0,11
L1,_id1,12
, then we have :
b["id"], b.id ,      b.loc["L0"] , b.loc["L0"]["id"]  , b["s"][0]
b["big_id"]= b.id+b.id     # add new line   .id is readonly   ["id"] write 
- pd to np , np to pd, shuffle
df = pd.DataFrame(np.random.randn(4, 2), columns=list('ab'))
n_p_x =df.values   #  n_p_x = np.copy(df)  , to np array
npmatrix = np.mat(n_p_x) # to np matrix
np.random.shuffle(n_p_x)     # in-place change 
- pd sort
df.sort_values ( [0,1],0,[1,1] )          # f1 =0 f2=1 , sort by 0:increase ; 1:decend
- flipud : reverse or 
fl= np.flipud(x)  #  fl = arr[::-1] 

python -V         # get version 
-numpy_  np_ python__

def load(fn):  
    fc = open(fn).readlines( )
    id_s = ""
    for i in fc[:-1]:
        id_s += i.strip() + ";" 
        pass
    id_s += fc[-1]
    id_m = np.mat( id_s )
    return id_m

def plot_xy(id_m):
    plt.scatter( list(id_m[:,0]), list(id_m[:,1]),s=0.5)
    plt.show()
plot_xy(load("txt.txt"))
id_m = load("txt.txt")  # "0 0 \n1.1 1.2 \n1.3 1.4 \n"
for i in id_m:
   print (i)

numpy randomint
- mat ,use matlab styple
np.mat('1 2;3.3 4')          # float64 
-ndarray ndarray to mat , mat to ndarray
id_m = np.mat( '1 2 ; 3 4')
id_arr = id_m.A         # ndarray   change back: id_mm =  np.mat( id_arr ) 
flat_arr = id_m.A1     # [ 1,2,3,4] 
id_m1 = np.mat( [ flat_arr ] )
xx =np.ndarray( (2,3) )  h=2,w=3  #  np.ndarray( shape=(2,3) ,dtype=np.float32 )
-std
std=np.std(a)        # std(a,0) -> get a line;  1-> get a line'T
-
id_mat = np.random.randint(0,10,[3,4] )    # randint(0,10) => 6 ?7?
-get random in -1,1 
rnd_t = (np.random.random([2,3])-0.5)*2      # ranom.rand(5,5)         =>0~1 and shape 5x5

rnd_t = np.random.randn(1,5)        # shape(1,5)
max_n = np.max(np.abs(rnd_t))
rnd_t = rnd_t /max_n
-random scatter 
import numpy as np
import matplotlib.pyplot as plt
x=np.linspace(0,10,50).astype(np.float32) 
-linspace and arange
np.arange(1,4,0.5).astype(np.float32)       # 1:4:0.5
x.dtype         # see the default is : float64 
np.linspace( 1,4, Num_of_ele ) 
-
print (x)
y=2.3*x-5.8
rnd_t = (np.random.random([1,50])-0.5)*4.66
rnd_t = list(rnd_t.flat)
id_mat2 = id_mat.ravel()       # => matrix ( [ [a,b,c] ])
y+=rnd_t
plt.scatter(x, y)
plt.show()
- area , s 
import numpy as np
import matplotlib.pyplot as plt
N = 50
MAX=10
x = np.linspace(0,MAX,N)
y = x
colors = x

fl= x[::-1]
area = np.pi* ( fl.astype(np.float32) )**2 

plt.plot(x,y)

plt.scatter(x, y, s=area, c=colors, alpha=0.5)
plt.show()
- end scatter , color 
np.full(3,1.1)     # => [1.1,1.1,1.1] 
y_=np.copy(x_)     #=>to clone one 
np.reshape(  np.arange(1.0, 7.0, dtype=np.float32), (2, 3) )   # => [1,2,3; 4,5,6] ;  => tf.constant( A )
xx=np.reshape([1,2,3,4,5,6],(2,3) )
np.arange(1,7).astype(np.float32)
-list
list_  = list_ + list_    # => [1,2] + [1,2] = [1,2,1,2] 
list(m.flat)  = np.array ( np.mat([[1,3],[2,4]])).reshape(-1,)         # reshape to 1 line array 
- shape is -1 
arr = np.linspace(0,9,6).reshape(-1,)        # shape will be (6,), line array
arr = np.linspace(0,9,6).reshape(1,-1)      # will be a mat, shape = [1,6] 
-
[ [1,a] for a in [1,2,3] ]       # if turple (1,a), also ok 
print("{} + {} = {}".format(x, y, x + y))
https://zhuanlan.zhihu.com/p/25717012 
-
a=[1,2]; # if it is 'abc' , then directly use "".join(a); 
for i in range(len(a)):
 a[i]=str(a[i]); 
x="___".join(a)
-
#!python # clone
a=[1,2,3]; 
b=a[:];
t=[i*i for i in a if i>=2]; 
a[1]=99; 
b[2]=999; 
a[1:1]=[77,88,99];  # insert in to a slice 
a[:0]=a; # copy itself to itself 
a=a*2 # also copy 
print(a, b);         # print ( "c is %d %s" % (x , y)); 
-
sum = lambda arg1, arg2: arg1 + arg2;
sum(9,8)
-
#!/usr/bin/python
dict = {}
dict['one'] = "This is one"
dict[2]     = "This is two"

tinydict = {'name': 'john','code':6734, 'dept': 'sales'}


print dict['one']       # Prints value for 'one' key
print dict[2]           # Prints value for 2 key
print tinydict          # Prints complete dictionary
print tinydict.keys()   # Prints all the keys
print tinydict.values() # Prints all the values
-
o
-python get the line and split with ','-
table=[];
for line in open("txt","r"):
 line=' '.join(line.split());
 line_e=line.split(' ');
 table.append(line_e);
print table;
print ("this is %s" %(table[1][1]));
-


tuple is only readable .
-python raw_input-
yourname=raw_input("input your name: ");
print ("your name is %s ), % yourname ); 
-

while(b>0):
print a;
a-=1;
if statement---
if(a<0) 
  print a;
elsif a<1: 
   print b
else :
    print c; 

for statement:
name =['a',"ab","abc"]
for i in name:
     print i; 

function def:
#py.py 
def fun(n):
      "this this the __doc__ of fun"
      print "fun()";
      return n+9;
print fun(222);
print fun.__doc__;
functon call:
1.from py1 import fun  : in py1.py , we have def fun(n): ...
#py.py
f=open("fout.txt","wb");
print>>f , "hello, world to fout.txt"; 

-my_list.append(my_dict);- list append dict ;
---End Python---

---mcc -c prime.c : -> prime.o  , mcc -o : -> prime.out
---.bat Files---
mcc -batX?
@if errorlevel 1 goto Lable_Error

:Label_Error
@echo "this is a Lable_Error "
-Xspfp  : single precision float point.
-Xbs : barrel shift; 
-Xll64 : enable 64-bit load/store Instruction;
-Hkeep : keeps the Object Files; 

sizeac analyze.o : x+x+x+xx= total_xx; 



---Nautilus---
sometimes nautilus go0 can't work, because of the COF of mdb,
tackle method: mdb nautilus.elf, change the target to nsim>>>

ssh login server:    ssh -Y linqi@arcdev4, test '-Y' by > ' xeyes' in virtualBox
in Int/, can login in ARChitectHS: 
> ssh -X linqi@arcdev4  ; 
 use: alias ssh_arc4 = 'ssh -X linqi@arcdev4' ; 
> ARChitectHS

---vim substitute 替换---
:s/-/^M-/g   , '-' -> '- '+ ENTER ;  while ^M = ctrl+ v & ctrl+m; 

MSS_ : Memory Subsystem.
get server hardWare configuration: > cat /etc/motd/
---qsub---
module load grd  # before man qrsh, qsh, run module ...grd  step 1
qhost -F  # got all host  step 2
qsub -P bnormal -o output_txt.txt sh.sh   ; 
qstat -u linqi 
qrsh -V -P ilight exec.sh  # -V , env var ; 
qrsh -V -P ilight -l hostname="us01dwamd136",host_os=xxx,xxx=xxx  test.sh
qdel -f 521420 
ssh linqi@attocs300    # SUSE11.2 QSC-J 
ssh -X linqi@attocs331  suse 64bit 
---ctx cmd---
/opt/CTXSmf/bin
ctxqsession -S |grep linqi 
ctxlogoff us01term1:2051
ctxreset us01term1:2051    # really kill the process 
---
Shell in any HOME-DIR: cd ~haifeng   ; 
ctrl+ K , got the reference of the function; 
---
how to run latest ARChitect on the sever?
1. set $ARCHITECT_ROOT to ~~/ARChitect/
2. Add PATH with $ARCHITECT_ROOT/bin/linux; 
3. #module load architect; 
4. ssh -X linqi@arcdev4 ; 
---
IP核分为软核（Soft Cores）、硬核（Hard Cores）和固核（Firm Cores）三种。
软核为能综合的HDL描述，硬核为芯片版图，固核为门级HDL描述
SoC设计分为IP核提供者和SoC集成者
IP核可复用：
１可配置；２不同工艺，不同综合脚本，适应新工艺；３多平台仿真，有Verilog，也有VHDL；
A->U->T : Application -> Utilities -> Terminal ; 
---
.bat set variables: 
set var1=ARC
:: set a variables
dir /D c:\%var1% 
---.bat check variable
@ECHO off
set var1=abc
echo %var1%
set var1=abc2
echo %var1%
pause
---

in vim : ^M is CTRL +V then CTRL+M, DOS Feature; 
shell FIFO pipe:
---master.sh
fifo=/tmp/tmpmaster.txt
rm -f $fifo
mkfifo $fifo
while :
do
printf "input your cmds: \n"
read my
printf "`date` $my " > $fifo
done
---client.sh
fifo=/tmp/tmpmaster.txt
while :
do
read cmd args < $fifo 2>/dev/null
if [ ! -z $cmd ]; then
echo " $cmd : $args "
sleep 1
fi
done
rm -f $fifo
-


echo -n , " some string"
echo -e "this is a line,and ENTER! \n\n"; 

or : printf "\n my string \n" 

---R_lang_ R_ ---
q()
R
x <- c(1,2,2.5)
x[1] the first one , no x[0]
1/x     log, exp, sin, cos, tan, sqrt | max, min,length,sum,mean, range=(min,max)
prod(x)    # multiple all the ele 
y=c(x,8,x)
y=y*2+y+1
2*1:30  ,  2*(1:30)  ,30:1  [1,30] includes 
seq(-5, 5, by=0.2) -> s3  | seq(length=51, from=-5, by=.2)
y=rep(x, each=3)    # y=c(x,x,x)    | rep(z,times=3) 
is.na()   !is.na() # get TRUE FLASE seq 
 x=paste("x","y",c(1,3,4),sep="+")
y = x[-(2)]  # exclude 2nd element from x to y 
mode(object)    # can be char or numberic 
digits <- as.character(z)    #convert to num 
d <- as.integer(digits)    #convert to int
as.integer( levels( factor(x) )    # remove duplicated item from mapkey 
tapply(score<-c(1,2,3),factor(label<-c("A","B","A")),sum)    # summary list 
apply( z[1,], "[", 1)     # get only the data from matrix or d.f 
as.vector( sapply(z[3,], "[", 1 )  )         # only data , no names 
> x=c(1:100)   dim(x)=c(10,10)  , x[1,3]   # one dim to two dim 
array(1:20, dim=c(4,5))    

f<- function(x1,y1) (x1*x1+y1) #function
outer(x,y,"*")  ==  x %o% y # (x0,y0) (x1,y1) =( (x0x1,y0y1),(y0x1,y0y1))
t(z)
table(x)	#count freq
table(x) -> y ;   prop.table(x) *100 ->  z;   # get pecentage for each ; 
z=list(name="abc",c(1,2,3) )	# list[[1]] or list$name
A <- scan() # two ENTER will terminate
if(4>5) print ("abc") else print ("bd")	# if , else statement
for(i in 1:20) print(i);
dimnames(x)=list(rep("",nrow(x)),rep("",ncol(x))) #print no title data
dimnames(z)=list(c("r1","r2"), c("c1","c2","c3","c4") )    #z is 2x4 matrix ; 
 data.frame(x=x,y=y)	#(x map y format)
t0=NULL ; for(i in 1:ncol(y)) {t0=c(t0,y[,i][1]);}            # get the first line's data only , no Header 

cbind(name1=y[,1], name2=y[,2] )     #data.fram..
rbind( c(1,2,3,333), c(4,5,6,666), c(1,11,1,1) ) ->x    # get the rows 
rbind( x[1,], x[3,] )    #get row1 and row3 


list_ <- lowess(x,y) , list_[[1]] ,or list_$x
lines(x,y)
-table read and process
filepath <- system.file("data", "morley.tab" , package="datasets")
filepath
file.show(filepath)
mm <- read.table(filepath, header=TRUE)
x <- seq(-pi,pi,len=50);
-test.R
#!Rscript
x<-c(1,2,4);
y=c(2,3,6);
jpeg("my.jpeg");
plot(x,y); lm(y~x, data=data_frame_z) -> lm_is  ;   abline(lm_is, col=6)
abline(a=x0,b=y0,col=2)    # a is (0,a), b is tan(x) 
 scatterplot3d(x,y,z,type="h")    # 3d 
plot3d(x,y ,z,col="blue", type="h")    # can rot ; 
t1[,2]=NULL    #del a col 

x;
y;
-
pie picture: x=c(1,2,3); names(x)=c("n1","n2","n3"); pie(x); 
yn=paste(names(x),y/sum(y)*100);yn=paste(yn,"%");names(y)=yn;
x=c("a","b","b","c"); y=table(x); pie(y,names(y));    barplot(y); 
names(y)=paste("name",names(y))    ;   barplot(y) ; barplot(y,col=rainbow(5)) 
-sort
read.table("txt.txt.csv",header=F,sep=",")->x
x[order(x[[3]],x[[1]]),]    # attach(x);  x[order(f1,f2),]
z[order(z[,1],z[,2]),]    # order table without name
data.frame(x=z[,1],y=z[,2])    # change to has-header table 
-
a <- matrix( c(5, 3, 4, 2, 2,    6, 8, 9, 7, 6,    12, 10, 11, 14, 13), 5) ; t(a)-> a; 
a=matrix(1:20,4,5,byrow=T)    #a=matrix(1:20,4,  byrow=T)
a <-  rbind( c(1,2,3),c(3,2,1) ) ; 

c(matrix_[1,],matrix[2,] ); 
-names(k4)=c(1,2,3,NA...)
barplot(k4,legend=c("one","two","three"),col=c("red","blue","green") )
barplot(k4,legend=c("one","two","three"),col=c("red","blue","green"),xlab="year",ylab="Product Sold")

---
---git_ ---
- env set up need ssh 
git config --global user.name "tlqtangok"
git config --global user.email "tlqtangok at 126.com"
git config --global core.editor "vim"
ssh-keygen -t rsa -b 4096 -C "your_email@example.com"
eval $(ssh-agent -s)
ssh-add ~/.ssh/id_rsa
cat ~/.ssh/id_rsa.pub     # cp to your clipboard 
https://github.com/settings/keys    #then new a SSH key here 

-
git status    # show any opened files
git checkout -- txt.txt     # discard changes 

cat >> test.txt.bak 
# git mv test.txt test.txt.bak
git add txt.txt && git commit -m'crt txt.txt ' -a && git push
git commit txt.txt.bak     # only to txt.txt 
git add test_folder        # add all the files in test folder
git log -n 5    # see commit number=5 
git diff     # see a git cache vs. workspace
---
---shell_  script ---
dd if=txt.txt bs=3 count=1 of=txt1.txt 
- ldd_
ldd interp.bin         # get all the dependency of .so file 
- watch
 watch -d -n 10 'cat txt.txt '     # each 10s, watch the output once , if diff, then highlight it 
- 
set -e     # set if next cmd not ret 0, will exit ,for security
-
-cmake_ --
$ENV{FOO}    #get env var 
cmake --help-command-list
cmake --help-command list 
cmake --help-variable-list
cmake <my_root_of_CMakeLists.txt> 
cmake --build . --target all
cmake .. && cmake --build  ..
- a simple example -
cmake_minimum_required(VERSION 2.8)
project(helloworld)
include_directories( inc )
aux_source_directory(src PROJECT_SRC)
add_executable(${PROJECT_NAME} ${PROJECT_SRC})
message( STATUS "print hello world" )
set (LIBRARYS mylib0.so mylib1.a ) 
TARGET_LINK_LIBRARIES(bin/test ${LIBRARYS})
--

-
-nl align line number
 nl -b a -w 4 -n rz txt.txt
-
---coverity_ usage ---
ls curdir
    cov_data  hello.c
cov-configure --config cov_data/converity-config.xml  --comptype gcc --compiler $(which gcc)
cov-build --config cov_data/converity-config.xml  --dir cov_data gcc hello.c
cov-analyze --dir cov_data
cov-format-errors -x -X --dir cov_data --html-output html_output

--sh.sh---
export PATH=/depot/coverity/cov-sa-linux64-8.0.0.2/bin:$PATH
[ -e "cov_data/converity-config.xml" ] || cov-configure -gcc --config cov_data/converity-config.xml        # the same if g++
cov-build --config cov_data/converity-config.xml  --dir cov_data gcc hello.c        # change to g++
cov-analyze cov-analyze --aggressiveness-level high   --dir cov_data
cov-format-errors -x -X --dir cov_data --html-output html_output  
cov-commit-defects --dir cov_data  --host us01-arc-coverity8 --stream C_Demo --scm perforce --scm-tool-arg '-p p4p-us01:1900' --user linqi --password 'MY_LAPTOP_PW' --description 'changelist 4194802 from linqi test 2016_12_31'

# see result firefox html_output/index.html 

--
- shell function 
echo_something(){
    echo $ROOT
    a=yes_it
}
ROOT=var
echo_something
echo $a

- lsof
ulimit -aS  # get open files number limit
lsof -u linqi  # check opened files , 
-

-seq
seq -s ":" 1 11
seq -s ' ' -f '(%E)' 1 0.1 3
seq 88 | xargs printf '0x%x\n'
seq -s ' ' -f '%0.2f' 1 0.2 3

- strace 
strace -f echo help     # -f will follow all the child process 
strace -f -o txt.txt -e write echo hello
 strace -e open gcc test.c    #show the function called 
strace -p 882  -c     # show performance
-
cat /etc/issue        # get distribution version Redhat 6.1 
-sendmail 
echo hello world | sendmail haifeng @ synopsys.COM
mutt -e 'set content_type=text/html' -a about.html -s 'hello' -- 'linqi @ synopsys.com' 'haifeng @ synopsys.com' <about.html
-
-trap -
trap 'echo hello' SIGINT
-
- shuf 
shuf file.txt         # shuf the file's lines 
-
http://user.qzone.qq.com/2589079022/blog/1471233164     expect usage: 
-
# pr : print 
 pr --page-width=77 --indent=5 *.cl.main.c

-
shell run parallel : 
(sh sh0.sh && sh sh1.sh) &
sh sh2.sh &
wait      # wait until all finished 
sh sh.sh 
-
patch
diff -u txt_r0.txt txt_new.txt > patch_file.txt 
diff -a txt_r0.txt txt_new.txt > patch_file.txt     # if binary file 
patch -R txt_r0.txt < patch_file.txt 
-
vncserver         # create a server , with name maybe arcdev4:2 ==> set to $DISPLAY
vncserver -kill $DISPLAY         --- also can be :  vncserver -kill :4 

-
nohup  ./sh.sh     # this command, use jobs to see that job 
then use : ps -aHef |grep sh.sh         # view the jobs , once log into again
top    # get which occupied the most of CPU
- pid_ -

alias psf='ps -u $USER -f '
kill -9 <PID> 
pkill -9 -P  <A_Parent_PPID>
pkill -9 -P $$         # only keep PPID , kill all child pid 
perl -e 'sleep 44;' &
$ pidof perl        ==> pidof 
pidof perl| xargs kill -9
pgrep -l -f perl          ===> 32034 perl -e sleep 333
pgrep -u relauto    -f TEM -l   # if no -l, get the id 
pgrep -f _T1_     # use my mark 
-
sleep 4s 
-
 od  ,   xxd        #read binary file 
-
echo $RANDOM # RANDOM number each time 
-minicom usage
find USB
dmesg |grep USB|grep attach , the last one;
-
shell read pipeline:
#!bash
while read file; do
        printf " $file\n"
done
-
rm -- '-targs=AC'   # rm a file with '-' 

---shell get current_path---
readlink -f ./t*/*.sh
pushd $(dirname `readlink -f $0`)
-
--- ssh access server and download ---
ifconfig        #get ip add:
-
ssh RSA gen pub key:  http://url.cn/O7s7AW
ssh log and keygen
. 
local> ssh-keygen -t rsa ; [ENTER][ENTER]..
local> ssh-copy-id -i ~/.ssh/id_rsa.pub linqi@arcdev4 [enter p:tlq~~ok]    :mv .pub to authorized_keys
local> ssh jd@two.linuxlearn.net 

encrypt and decrypt:
openssl genrsa -out test.key 1024        #generate a rsa key, include two: pub and priv
openssl rsa -in test.key -pubout -out test_pub.key        # separate the pub key
# encrypt hello file with only pub key
openssl rsautl -encrypt -in hello -inkey test_pub.key -pubin -out hello.en        
openssl rsautl -decrypt -in hello.en -inkey test.key -out hello.de    #decrypt use priv key
- gpg encrypt -
gpg -c txt.txt        # input pw two times
gpg txt.txt.gpg       # input pw once
server>; 
OK
-

->  scp -r ~.pub  a:~/ ; mv to ~/.ssh   : recrusively ; 
scp linqi@arcdev4:/slowfs/us01dwslow025/arc_test/linqi/tmp/*exe $win7
---end ssh ---

---wireshark_ ---
filter:
ip.addr==10.13.217.47
ssl    #https, ssl, TLSv1.2 

---linux minicom , putty on linux---
minicom, 
use "lsusb" to see my device name and company 



---mount command share_c ---
sudo su root  # change my root permission 
export ABCD =`sudo mount -t vboxsf share_c share_c `
export ABCD="if I have some space in it"

>sudo mkdir share
>$ABCD
>sudo umount share
if share_c cannot use , cd to /opt/  , run autorun.sh again ; 

-
after installation of Ubuntu, need install the Additional , and restart ubuntu, and set adjust windows size 
sudo dpkg --add-architecture i386  
The following packages have unmet dependencies:
 ia32-libs-multiarch:i386 : Depends: libglapi-mesa:i386
                            Depends: libglu1-mesa:i386 but it is not going to be installed
                            Depends: libqt4-opengl:i386 but it is not going to be installed
                            Recommends: libgl1-mesa-glx:i386
                            Recommends: libgl1-mesa-dri:i386

-
cat -s txt.txt ;  ignore space line
cat txt.txt |tee -a txt.txt     ;  stdout && > to file;  
cut -f 2 txt.txt  ;  get field=2  ;
cut -f1-2 txt.txt ;  
split -b 1G -d movie.rmvb movie_  ;  split file into 1G each ;   
cat * >movie_merge_one.rmvb  # then merge them togather ; 

.~/.bash_profile  --> contain if [ -r .bashrc]  then . .bashrc
.~/.bashrc---set personal env;

read -a array_a  ;  -- echo "${array_a[1]} ; 
for i in `seq 0 ${#array_a[@]}`
do
        echo "ok"
done
read TLQ  ; | waitting for inputting: if "tlqtangok is good"
delete from left : #(##) --- etc: echo ${TLQ#*ok i} -> "s good"

--- tar_ ---
./configure --help
xz -d llvm-3.9.1.src.tar.xz 
tar xzf llvm-2.9.tgz
tar -cjf txt.tar.bz2 txt.txt --- j :bzip2 ,c: create; 
tar   -jxvf    xx.tar.bz2  
tar -xfv txt.tar.bz2  -C /tmp       --- x : extract and get all files -> /tmp;
tar -tvf dir.tar -- view tar files :f must put end ;
-on server arcdev4 : -
tar xfv dw_sensor_ip_subsystem_v1.1.0 : 
tar xzfv Win32-Shortcut-0.08.tar.gz
-
unzip mdbissue.zip -d tmpdir4/ ;   extract .zip file ; 
？　－－－echo $? ,0 ,cmd is successful; 

!ch - - - press UP can get implement "chmod" + history ->Enter is good
x : if you can cd to the dir|| w : delete files;
more test.c and Space --- less can use page and down ; 
vim  sigil ". " may used to insert a space between chars.

chmod ugo ---chmod u=wrx o=x txt.txt;
info ls ---detail of commands , with '?' to  know how to keyshorts
sort -k2n -u  ccac.c  : field2 sort in unique
sort -n -k2.5 x.txt  #- id=119 x119

man date --- with [/or?]STRING to search certain STRING
stdin ==0 stdout ==1 stderr ==2  redirection：
ls *.h *.txt 1>stdout.txt 2>stderr.txt   ;  2>&1 : or >& txt.txt , all to stdout 
 sh dfkjsdf > txt.txt 2>&1
ls -X ---sort by extension name  
shell -x *sh   # echo on each statement , for dbg  
-shell prevent * extend-
set -o noglob    # the same as set -f, set noglob mode
#set +o noglob
var1="echo this is test* line"
echo $var1   # or  echo "$var1"  , prevent extend 
-
-echo to var -
var="help it"
var1=`echo -nE "this is a new $var " `   # -E not enterpreter, not backslash. -n not new line
var1=${var1}$var
echo $var1
-
echo {a..c}{0..4}   # a0 a1 .. b0 ,,,
-
var = `рwd`  ; echo $var ;   # save output to var ; 
-cygwin cygpath cygstart-
cygstart cmd.exe # will start a win cmd.exe in current workspace ; 
cygpath -aw bc.txt  # to dos absolute name ; 
cygpath -a -t dos bc.txt   # -t dos || -t unix 
-
cygpath -w `рwd`    # cygwin path to windows ; 
-
if [[ "$#" -eq "2" ]] ; then   # shell compare only numbers
fi
[ "$1" != "" ] && _CODE_J_=$1 
-
shell param $0  is test.sh 
shift N ;   #can't catch pop num, but affect $@; 
cal="scale=3; x=9; y=10.4; x/y"  ; echo $cal | bc     #  bash calculate 
stat txt.txt  #get full info for the file 
-
(ls; ls ; ls) > txt.txt  # all cmd in Group () > txt.txt
unix2dos  # tr \n ->\r\n ; 
yes (no)| rm --   # yes or no Generator 
-shell case-
case $1 in
    1*) echo 1;; 
    2*) echo 2;;
esac
-shell while and for((-
-echo no interpreter-
my_makefiles=`ls *_makefile 2>/dev/null`
for i in $my_makefiles ;do
        echo -nE "gmake -f $i clean && "
done
echo -nE " DEL /f *_makefile mqx_config.PL "
-
for((i=0;i<10;i++));do
date
done 
-
i=6
while [[ "$i" -ne "0" ]]; do    # -ne -eq only for number , "$i" == "helloworld", == for string
        echo $i
        ((i--))
done
-
for i in "$@" 
do 
echo $i
done
-
-shell getopts-  #run by   --- sh *sh -a txt.txt 
function Usage(){
    echo " sh *sh -a atxt.txt -b btxt.txt "
}
-
while getopts 'a:b:c?' argv ; do  # add :a, add more warning 
        case $argv in
                a) echo "-a -> $OPTARG" ;;
                b) echo "-b -> $OPTARG" ;;
                c) echo "-c" ;;
                \?) Usage ;; 
        esac
done
-
read -p "this is a prompt:" ;  echo "$REPLY"  #read to REPLY or  read -p "prompt:" get_var 
date -d "33 days" "+%Y-%m-%d"  #date add 
---shell at_ atq atrm---
at 6:29PM "test.bat "  :: dos at    

date -d "next Fri"

at -f cp_win7_sh.sh now +11min ; 定时jobs ; 
at -f _perl.PL midnight 2014-06-20   # or : nohup  at -f _perl.PL midnight 2014-06-20 
at -f _perl.PL `date -d "10 mins" "+%Y-%m-%d" `
atq   #get No. of jobs 
atrm 3  #param=jobs No. 
-
tree -L 3  # show only level 3 directory 
-
vim /etc/passwd -> change A:marco -> A:linqi     #linux change username 
-
md5sum perl.PL ;   35f16d8c50f133ea8fe79a31048204bf perl.PL
-
---xargs
find .  -name '*1.txt' | xargs -i ls -al {}
-
---grep---
cat * |grep -v "README\|readme" ;  v －versely 反向；
ls | grep 's[123]' |xargs rm -rf　　－－　Pass params to rm

rm `ls|grep 's[123]'` : rm in condition; 
grep -P '(makefile)|(\.mk\b)'
mw_ver_full=`ls $prepkg|grep -P $1'$' | wc -l `        # 2014.06 2014.06.rc1 2014.06.rc2 
grep -C3 find_TAG txt.txt     # circle of the findstr  -A =ahead  -B back find 
grep -v -e rmstate -e findstate   mqx_stage_release.sh  # --invert rm&& find 
grep -n '^g.*g' txt.txt --- start ,g and end with g; 
ls | grep -n 'txt' --- grep txt from cmd display include the line number;
grep -R 'something' ./         # grep recrusively in a dir

cat -<<EOF>txt.txt
>1
>2
>EOF
-
---return arr_a
declare -a arr_a
arr_a=( a1 a2 a3 4 a5 )
function fun(){
declare -a arr_b
i=0

for v in "$@"
do
        arr_b[i]=${v}_
        ((i++))
done
echo "${arr_b[@]}"
}
declare -a T_a
T_a=(`fun "${arr_a[@]}" `)
printf "${T_a[1]}"
-
for i in "${arr_a[@]}"   # for i in ${arr[@]}  
do
        printf "$i"
done
-
# output all the params 
#!/bin/bash

while [ $# -ne 0 ]

do

echo $1

shift

done
-
- shell cat two arr -
arr=(1 3 5 6)
echo "${arr[@]}"
arr+=(9 8 7)  # arr+="${arr_id[@]}"  ; 
echo "${arr[@]}"
arr_2=("${arr[@]}" 'help')
echo "${arr_2[@]}"
-
((i++)) ((i--))  #only declare:  i=99 
.ini: 
CFG=`dirname $0`/CFG.ini
[ -f $CFG ] && . $CFG
echo "$int_a"
-
var1=
[ -z $var1 ] && printf " \n-z "

pass space : echo My Document |xargs -0 ls   
timeout -s 15 3 ./test.sh  ;   3 s  send signal=15 to *.sh

if [[ "$arch_version" =~ "13" ]] || [[ "$arch_version" =~ "09" ]] ; then
        arch_version=$v0;
printf "$1\n";
printf "$2\n";
if [ "$1" = "myhelp" ] || [ "$2" = "" ] ; then
        printf "help\n";
else 
        printf "else"
fi
---shell function---
function func(){

for i in "$@"   # this is params list 
do
        printf "$i\n"
done
printf "$* \n"; 
array_a=(1 2 3 4 5 6)
echo `shuf -e ${array_a[@]} `
}
echo " this is : `func` "
func 1 2 a3 a4 

function f1(){
param1=$@;
#echo "$param1"
p1=$1
p2=$2
p3=$3
echo "$p1";
};
# --- main () ---
f1 p1 p2 p3

---count file number---
ls |grep '^p_' |wc -l
grep -n '^g.*g' txt.txt --- start ,g and end with g; 
---#include---
#include <stdio.h>
#include <stdlib.h>
#include "hss.hss"
extern void f1(int i);
extern void f2(int i);
extern void f_h(int i);
-
while ---hss.hss---
#include "stdio.h"
#include "stdlib.h"
void f_h(int i);
void f1(int i);
void f2(int i); 
---Detect memory leak:
set ENV :
export MALLOC_TRACE=$HOME/m_trace_txt
#include <mcheck.h>
int main()
{
mtrace()  ;
// some malloc() statement ; 
muntrace(); 
}
gcc -g test.c ~/m_trace_txt
---
on server:
valgrind --tool=memcheck ./jidor_ccac.elf
valgrind  --log-file=log.txt  jidor_ccac.elf

---stack Frame in call---
http://user.qzone.qq.com/2589079022/blog/1396341707 
main()
    |__ fun()
        |__in_fun()
before fun() call in_fun(), fun() would do:
1. 将返回地址放入栈底；
２. 保存fun() 中可见的参数push to STACK,left -> right，include :
    _params; 
    local_fun_i; 
３. load in_fun(_param) to %r0 , then CALL ; 

--- C++11 c++_---
opencv_ ubuntu build cml:
installed necessary libs 
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/jd/t/cvbld 

---clang_ c_ ---
-protobuf - 
./configure --prefix=$t
make install 
after installation:
export PATH=where the protoc is 
export  PKG_CONFIG_PATH=protobuf_out/lib/pkgconfig
export LD_LIBRARY_PATH=/protobuf_out/lib

-c++ string pointer --
    string *id_string = new string ; 
    char abc[256]; 
    for ( auto & i : abc ){    i='a'; }
    id_string-> assign(abc, 256); 
    cout <<*id_string ; 
    delete id_string ; 

0x00000008u         => unsigned int 
- atoi atof itoa sprintf   #include <stdlib.h>
char *p = argv[1]; 
float f0= atof(p);
float f=f0*1000*1.0f; 
int ms = (int)f; 
printf("- sleep %0.1fs\n", f0 );
-itoa  for source see: https://zhuanlan.zhihu.com/p/25460661 
int _b_ = atoi(argv[1]?argv[1]:"10");
itoa(number,string, _b_);
 _b_==2 && printf("integer=%d string=0b%s\n",number,string);
 _b_==16 && printf("integer=%d string=0x%s\n",number,string);
 _b_==10 && printf("integer=%d string=%s\n",number,string);
-
#include <memory.h>
memcmp( "abc", "abcd", 3 );   // if ==, then it should be 0  , if not, then -1 
    auto  chr_ptr = memchr( "abcd", 'b', 3 );   // if ==, then it should be 0 
    printf("%s\n", chr_ptr );   // ---> bcd 
-memmem_  strcpy strncpy memset - 
char *hay = "abceabc";
char *nee = "ea";
char *hay_off = strstr( hay, nee ) ; 
cout << hay_off[0]<<endl; 
char buf[256] = {0}; 
printf("%d\n", sizeof(buf));   // ---> 256
strcpy(buf, hay_off );  
printf("%s\n", buf);  
printf("%d\n", strlen( buf )); 

memset(buf,-1,256); 
strncpy( buf, hay_off, 2 ); 
buf[2]='\0'; 
printf("%s\n", buf);      
printf("%d\n", strlen( buf )); 
-
- strstr - 
char *hay = "abceabc";
char *nee = "ea";
char *hay_off = strstr( hay, nee ) ; 
cout << hay_off[0]<<endl; 
-
- get file size : 012 --> 4 
fseek( fp, 0, SEEK_END);      //move to end 
size_t len = ftell(fp);
fseek(stream,0,SEEK_SET);   //mv to start 
fseek(stream,100,SEEK_CUR);  // relative to curpos 
-
- fread  
https://zhuanlan.zhihu.com/p/25694823 
read_file_split_exec_file_cpp
size_t size = fread( (void*)cp, (size_t)1 ,(size_t)filesize_len, fp );

unsigned char array[]={1,2,3};
printf("%d",sizeof(array_def)) ;  // => 3 

while((c=fgetc(fp)) != EOF){    }
- to c argc argv 
int main(int argc , char** argv)
{
    int argc_ = 0 ; 
    while ( argc_ < argc ){
        printf( "p%d: %s\n", argc_, argv[argc_] );     argc_++;   // argv[0] is test.exe 
    }
    return 0; 
}
-
-get file len and put it into a mem 
     struct stat id_stat;
        stat( argv_[1], &id_stat ) ;
        printf("%d\n", id_stat.st_size );
        int len = id_stat.st_size;
        char *content = new char[len+1];
        FILE *fp = fopen( argv_[1], "rb");
        size_t size = fread( (void*)content, (size_t)1 ,(size_t)len, fp );
        content[len] = '\0';
-
- c.assign then use find
deque<int> id_d; 
vector<int> id_v; 
id_d.push_back(1); id_d.push_front(2); 
id_v.assign( id_d.cbegin(), id_d.cend() ); 
auto ptr = find(id_v.cbegin(), id_v.cend(), 1); 
if ( *ptr != 1 ) {perror();}
- string to c_str c_char
printf("%s\n",i.c_str());
-
-namespace
namespace t{
typedef xxx xxx
};
using namespace t ; 
//   namespace t1 = boost::algorithm; 


-string c++ -
#include <iostream>
#include <string>
using namespace std ;
string a("helloworld "); 
string b = a+ "he"+"llo"; 

for ( auto &c : b ){ c= dosth; }

to build use c++11 : 
 mo_u gcc && mo_l   gcc/5.2.0
$ g++ -std=c++11  test.cpp
- verctor -
vector<int> a ;         // v_int; 
vector< vector<int> > //  v_v_int; 
vector<string> v_str( 10,"hi" );   // hi x 10 
int arr[]={1,2,3,4,5,6}; 
vector<int> v_i( begin(arr),  end(arr) ); 
- 
#define elementsof(v)   (sizeof (v) / sizeof (v[0]))
#define a_begin(v)      (&v[0])
#define a_end(v)        (v + elementsof (v))
#define a_range(v)      v
#define b_e(v)          a_begin(v),a_end(v)
#define print_v_i(v)    ( for_each(v.begin(),v.end(),[](int i){cout<<i<<" ";} ) ) 
int inputs []  = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 19, 99, 999, -1, -3, -99, 234234 };
int outputs [] = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10,  10, -1, -1, -1,  10 };
 vector<int> results;
  vector<int> in_v;
std::copy ( a_begin(inputs), a_end(inputs), std::back_inserter ( in_v ));         # copy_if 
-

-lambda 
https://zhuanlan.zhihu.com/p/24986688 lambda lam


-boost_ --
download boost , 
and build that , first : 
 sh bootstrap.sh --help
 sh bootstrap.sh
 b2 --help
 b2   --prefix=/slowfs/us01dwslow025/arc_test/linqi/tmp/boo
---override---
not virtual, if add override keyword, show compiler error!
-
-for_each & lambda; 
#include<iostream>
#include<cstdio>
#include<thread>
#include<atomic>
#include<algorithm>
using namespace std;
int main(){
        int a[4]{1,2,3,4};
        autototal=0;
        for_each(a,a+4,[&](int i){   // [sz]  capture list for local var 
                        total+=i;
                        });
        cout<<total<<endl;
        return0;
}
...
deep copy:
#include <iostream>
#include <cstdio>
using namespace std;
class A{
public:
        int *x;
int y=1;
A():x(new int(y)){};
         A(const A& A_):x(new int(A_.y)){};
~A(){delete x;};
};
int main(){
A id_A0;
A id_A1(id_A0);
return 0;
}

---
auto a=fun(float x); 
int a=9;  decltype(a) b=99; 
for(auto &a: arr){
cout<<a; 
if(a==4) break; 
}; 
c++11 template<---
-
http://url.cn/K8rNbJ multi-thread examples 0f c11
-
template<class T_0,class T_1>
auto fun(T_0 t_0,T_1 t_1)->decltype(t_0+t_1)
{
        return t_0+t_1;
}
-
Constructor call a Constructor: 
class A{
        public:
                int x;
                int y;
        public:
                A(int x_,int y_):x(x_),y(y_){};
                A():A(3,4){};
};
int main(int _n, char ** _v){
A id_A=A(44,55);
A id_A_2=A();
cout << id_A.x<<endl<<id_A_2.x<<endl;
return 0;
}
---nullptr---
void fun(char * ptr){
ptr==nullptr && cout<<"ptr is nullptr\n";
};
-
---enum---
template<class T> struct A { enum E: T; }; 
 template<class T> enum A<T>::E: T { e1, e2 }; 
 A<int>::E e = A<int>::e1;
-
class A{
        public:
        enum{red, yellow,black};
        int x=red;
        int y=yellow;
};
enum Enums: unsigned char{
var0, var1=99
};
int a=Enums::var1; 
-
auto g_c=UR"(*????)";
        while(*g_c)
                printf("%c ",*g_c++);
-
---template---
template<class Int,class ...A> void f(Int int_,A ...args){
cout<< int_<<endl;
};
int main(int n_,char ** v_){ 
f(1);
f(9,3);
f(9,9,8);
return 0;
}
-
lambda expression---
int fun(int i){
int fun_a=9;
//i++;
[&,fun_a,i]{      // [=] value , not ref; 
//i++;
//fun_a++;
cout<<i<<endl;
int ret_cod=fun_a; 
return ret_cod; 
}();
//cout<<ret_code<<endl;
cout<<i<<endl ;
cout<< "ret_code " <<endl ;
return 1;
};
auto functest=[](int i){cout<<"here is lambda test \n"<<i<<endl; };
functest(544);
－
right angle brackets---
template<int> struct X{};
template<class T>struct Y{};
Y<X<1>> id_Y0;
Y<X<(1>>2)>> id_Y1; if not paren, error ; 
-
Rvalue references
class A{}; 
const A source_const_rvalue();
 const A& source_const_ref();
 const A&& source_const_rvalue_ref();
-
--- VCS guide---
get *.v  , then compile:
#---
#--- how to compile and simulator an Verilog file---
all:target.simv
target.simv:Gen_Clock.v xor.v xor_tb.v
# vcs -o $@ $^
        vcs -o $@ $^ -debug
clean:
        rm -rf *.simv *.daidir *.key
#---
run with -gui : watch waves ; 
./*.simv -gui 
example:  http://url.cn/L8tugr 
---ARCtest ---
before that in build/ , need to run
a. Make install
b. Make designware_libraries
 > make compile 
then : ARCtest -iss -test=1-10
           ARCtest -test=1-10; 
-

---_mqx_ ---

---mqx linux setting

#  Jidor MQX_GLOBAL CONFIG #
export MQX_ROOT:=$(shell рwd |xargs dirname)
export COMPILER_ROOT :=$(shell which ccac |xargs dirname |xargs dirname)
export MQX_COMPILER_ROOT:=$(COMPILER_ROOT)
export NSIM_DIR:=build$(PS)nsim
export processor:=$(shell ls nsim|grep .mk|grep a6 )
export MQX_CONFIG=$(MQX_ROOT)$(PS)$(NSIM_DIR)$(PS)$(processor)
###



::BEGIN mqx.a
:: MQX GEN mqx.a ---
set MQX_ROOT=C:\ARC\software\mqx2.61
::create starterkit mqx.a
set MQX_CONFIG=%MQX_ROOT%\build/starterkit/config0.mk
pushd %MQX_ROOT%\build
gmake clean && gmake -e
popd
:: EOF mqx.a
-
:: MQX build and run nsim examples---
::before this , must set MQX_CONFIG to build mqx.a
::set MQX_ROOT=C:\ARC\software\mqx2.61                                     
set MQX_CONFIG=%MQX_ROOT%\build\nsim\arca6_config.mk    
set EXAMPLES=%MQX_ROOT%\examples                                        
set GO_BAT=goa6.bat                                                                         
if "%1" == "" (
 set id_hello=hello
) else (
set id_hello=%1
)
pushd %MQX_ROOT%                                                                       
cd %EXAMPLES%\%id_hello%                                                           
:: make , build the examples project
gmake clean && gmake                                                                    
:: call *.bat file
 call "%MQX_ROOT%\build\nsim\%GO_BAT%" %id_hello%
popd
:: EOF

---linux---
#!bash
export PROJECT_NAME=hello
export MQX_ROOT=$tmp/mqx2016.03
export MQX_CONFIG=$MQX_ROOT/build/nsim/arcv2em_config.mk    
export EXAMPLES=$MQX_ROOT/examples 
export GO_BAT=goem.sh

pushd $MQX_ROOT
cd $EXAMPLES/$PROJECT_NAME
#:: make , build the examples project
gmake clean && gmake 
bash $MQX_ROOT/build/nsim/${GO_BAT} $PROJECT_NAME
# END

mdb -cl -run -av2em -digilent   -OS=MQX arcv2em_2.met/dw_apb_led.elf        # run again , need re-config board?
---


::BEGIN hardware example 
# 1. build responding mqx.a lib;  cd into $mqx_p/build , sh $perlp/mqx_run_all_makefile_in_bat.sh -b -c -s
# 2. cd to examples/axs101/uart
# 3. vim makefile , add export list from em_makefile , change its MAKE_CONFIG
# 4. cmd.exe , gmake
---
::---build and run MQX EMSK hardware ---::
---source this file---
#!bash
export COMPILER_ROOT=/home/jd/ARC/MetaWare/arc
export MQX_ROOT=/home/jd/perl/test/mqx2015.88
export MQX_COMPILER_ROOT=${COMPILER_ROOT}
export MQX_CONFIG=/home/jd/perl/test/mqx2015.88/build/starterkit/config2.mk
---end sourcefile
cd mqx2015.88/examples/starterkit/dw_apb_button_led 
make -e        # build it
 mdb -run -av2em -digilent arcv2em_2.met/*.elf    # dbg it 

---
RTCS™ TCP/IP stack RTCS   
1. p4 from the depot :

     //dwarc/Tools/MQX/Installers/main/dev/MQX_2.60_installer.tar.gz //linqi/linqi/MQX_p/MQX_2.60_installer.tar.gz
     //dwarc/Tools/MQX/RTOS/main/dev/... //linqi/linqi/MQX_p/...

2. to laptop:

.use stage_release.sh under un_release/release, hacked a bit from 2.60 to 2.61;
.gen C:\ARC\software\mqx2.61 ;

change /cygdrive/c/arc/software/mqx2.61/library/.settings/org.eclipse.cdt.core.prefs From mqx2.60 -> 2.61 with perl-string_subst 
.change include file in cplus/ , Propriety->set right MQX_ROOT ;
.under build/* , there is a config.mk file, is global config file, SAVE_, means to save mqx.cmd , build args. may need to copy to hello/, hello2/ , contain _BSP=ml50x, _PSP=arca6, build.
.if need to change config, select hello/ , r-click, select build configuration , set active, then the wanted config selected ;

---Java_ ---
 java set syso:
in window->pre.. -> java ->editor->auto assist -> Auto activation triggers for java :
From . to abcdefghigklmnopqrstuvwxyz.@ http://t.qq.com/p/t/419119040373257
-- inner class 
public class test {
    public class A {}; 
    public class B extends A{
        B(int i){x=i;};
        public int x = 9; 
    };

    public B getB(int x){return new B(x); }
    public static void main(String[] args ){
        B id_b = new test().getB(77); 
        System.out.println(id_b.x ); 
    }
}
-end inner class

---cygwin_ ---
backup {perl-p } cp_to_bak .bashrc .vimrc .bash_aliases 
need  curl ,  perl ,perl-curl , perl-JSON,   cpan , bc , openssh,  make , gcc-g++ ,vim ,gvim,  unix2dos, md5sum ; 
tree , ifconfig , ip , python , expect 
---sqlite3_---
sqlite3 test.db
> create table employee(empid integer,name varchar(20),title varchar(10));
sqlite3 company.db < insert-data.sql
alter table department rename to dept;
update employee set deptid=3 where empid=101; 
perl sqlite3 DBI    http://user.qzone.qq.com/2589079022/blog/1452649563 

---jquery_---
$("#id" + SPS + "img:eq(1)") .hide();
   $.post("backend.php",{ time: timestamp }, function(xml) {
                                //移除掉 等待提示
                                $("#loading").remove();
                                //调用解析xml的函数
                                addMessages(xml);
                        });
                         //每隔4秒，读取一次.
                        setTimeout('updateMsg()', 4000);
                }
        //解析xml文档函数，把数据显示到页面上
                function addMessages(xml) {
                    //如果状态为2，则终止
                        if($("status",xml).text() == "2") return;
                        //更新时间戳
                        timestamp = $("time",xml).text();
                        //$.each循环数据
                        $("message",xml).each(function() {
                            var author = $("author",this).text(); //发布者
                                var content = $("text",this).text();  //内容
                                var htmlcode = "<strong>"+author+"</strong>: "+content+"<br />";
                                $("#messagewindow").prepend( htmlcode ); //添加到文档中
                        });
                }

---php_   ---
_$REQUEST  the data sent from the client to server , by $.post ()
_$SERVER , include Server info and user agent info ,
-
    print("<B>请填写HTML颜色代码:</B> ");
    print("<INPUT ");
    print("TYPE=\"text\" ");
    print("NAME=\"inputColor\" ");
    print("VALUE=\"$inputColor\">\n");
-

-mongodb_---
sudo apt-get install mongodb
/usr/bin/mongod --config /etc/mongodb.conf        # start mongodb server 
sudo /usr/bin/mongod --config /etc/mongodb.conf   --shutdown  # shutdown server 
cpan > install MongoDB

mongo        # into client shell 
> use db 
> db.co.insert( { k0:"v0"} )
> db.co.find()

> use mydb 
> db.dropDatabase()

> use mydb2
>  db.collection.drop()

> db.version()        # server version 

> db         #  db.stats()        # show current db 
> x = ( {1:2,3:4, 4:6} )
> db.c0.update( {k0:"v0"}, {$set: {k0:"v0_new", k1:"v1"}} )
> db.c0.remove( { k0:"v0_new"}, 1 )         # remove one record
> db.c0.find({ k0: {$type:2}} ) 
> db.c0.find({ k0: {$type:2}} ).limit(2).skip(1)
> db.c0.find( {}, { k0:"v0_new", _id:0} )    # select certain key , no _id 
> db.c0.find({},{_id:0})     # no need to show _id ?
> db.c0.find({k1:"v1"},{_id:0} )        # {} #where area# ,  {} #select show *?# 
> db.c0.insert( {
... name:"Tom",
    addr:{
    "$ref" : "c1",    #　cname
    "$id" : ObjectId("5834fe64f79b9c007da927c5"),
    $db:"db0"
}
}
)

db[db.c0.findOne({name:"Tom"}).address.$ref].findOne(
... {
... _id:db.c0.findOne({name:"someone"}).address.$id
... }
... )

mongo localhost:27017/test   txt.js      # mongodb shell 

http://user.qzone.qq.com/2589079022/blog/1479903215 nodejs mongodb 
mongo 127.0.0.1:27017/test -eval 'db.c0.find().forEach(printjson);'

db.c0.find({},{_id:0}).sort({_id:-1}).limit(7).forEach(printjson)
> var x = { a: [1,2 ,"33"],  }
> printjson(x)

db.getCollection("c0").find()
db.getCollectionNames()    # get an array 
db.c0. aggregate ([ {$group: {_id:"$name", count:{ $sum:1 } } } ])    
#get:
 { "_id" : "T1", "count" : 2 }
 { "_id" : "T", "count" : 4 }
db.c0. find ().sort({score:-1,name:1})
db.c0. find(   { $or:[ {name:"T"},{score:3 } ] })
db.c0. insertMany( [ {"name" : "T0"},{"name" : "T1"}, {"name" : "T2"} ] )
db.c0.find( { score: {$in: [2,1] } } )
db.c0.find(  { "score.0" : 1  } )
printjson ( db.c0.find().toArray()[2] )
db.c0.findAndModify(   { query:{ score:3 }, sort:{score:1}, update:{$inc:{score:1}}   })
db.c0.count( {name:"A" } )
db.c0.createIndex({ _id: 1, name: -1 } )
db.c0.remove( { name: {$gte : "A" } } )
db.c0.find({"arr": {$eq : 5}}  )    # { "_id" : ObjectId("5838254dc69bfedec69ce7d1"), "arr" : [ 1, 2, 3, 4, 5, 6 ] }
db.c0.find( {}, {  "arr": {$slice:-1 } , _id:0  } )
db.c0.find( { score: {$exists : 1}})
db.c0.find( {score:{$type:"number"}}  )
db.c0.find().map( function(e) {return e.key;} )
db.c0.find( {name:/T/})
db.c0.find().min( {_id:6}).max({_id:8})     # must createIndex({_id:1}) 
 db.c0.insert( { time: _srand() } )
https://docs.mongodb.com/manual/reference/method/js-collection/        # go  to the reference 
-
---mysql_ ---
use prompt of mysql:  sudo su;  mysql -u root -p [ ENTER]
/usr/local/mysql/bin/mysql -uroot -p123456 -h127.0.0.1
show databases ; 
create database d0;
use d0; 

insert into mysql.user(host,user,password) values('localhost', 'jd1', 'jd1');
grant all privileges on *.* to 'jd0'@localhost identifie by 'jd0'; 
show columns from t0 = describe t0; 
update t0 set f2=0 where f1='a';

-apache apache2 config ---
/etc/apache2/httpd.conf

- opencl_ -
http://user.qzone.qq.com/2589079022/blog/1473173130  windows vs2012 cml build 


---node.js_ node_ nodejs_---
-error 
throw new Error(`- User ERROR !\n`);
-return multiple value 
var [x,y] = fun1(); 
fun1=()=>{
return [1,2]; 
}
-fileWrite 
fs.writeFileSync ( filename_each,   arr.slice(i*quato).join("\n") );
-
-print no ln :
process.stdout.write(str);
-range()
const range0_99=[];
for(let i =0;i<100;i++) range0_99[i]=i; 
// start range() 
var range0_N= function(){
// range0_N()  range0_N(3) ;  range0_N(0,9)
//const range0_99=[];
//for(let i =0;i<100;i++) range0_99[i]=i; 
    var pre=0; 
    var next = 0; 
    //print(arguments); 
    if ( arguments.length == 2 ){
        pre=new Number(arguments[0]); 
        next=new Number(arguments[1]); 
    }
    else if ( arguments.length == 1 ){
        pre=0; 
        next=new Number(arguments[0]); 
    }
    else {
        pre=0; 
        next=new Number(range0_99.length);
    }
    if ( next > 100 ){
        next = 100; 
        print ( "- N will be 100 "); 
    }
    return range0_99.slice(pre,next); 
}
-dirname
${__dirname}/sub.js
-
-count time used 
console.time('time_mark');  
console.timeEnd('time_mark'); 

- node -e  how many number dot 11.993 => 11.99
new Number(9.993).toFixed(2);         // => 9.99
Math.floor(arr.length/quato)  ;     // float to int 
Math.log2(8)         # Math.log( Math.E) ==> 1 

node -e " var b=new Number("10").toString(16); console.log(b); "       // also Number(10)
buf2.toString('hex') ;    // from Buffer.from("abc")  => 0x61 0x62 0x63

-node Uint8Aarray  buffer
var m = new Uint8Array(11 );  m[0]=1; 
const arr = new Uint16Array(2); 
arr[0]=0x1234; arr[1]= 0x5678; 
const buf1 = Buffer.from(arr); // Copies the contents of `arr` //get low byte for each : 34,78
const buf2 = Buffer.from(arr.buffer); // Shares memory with `arr` // get all , and share: 0x 34 12 78 56 
const buf = Buffer.from(arr.buffer, 0, 16); 
for (const b in buf) { print(b);}
buf.length; 
-str to char code : int 
str.charCodeAt(i);
-Buffer.compare .copy equal
buf1.equals(buf2);  // true if [1,2,3] and [1,2,3] 
var b0=Buffer.from([1,2,3,5,    3,9,27,36,        3,2,1]);
var b1=Buffer.from([3,2,1,        3,9,27,36,        1,2,3]);
var x = b0.compare(b1);   // b0<b1, so => -1 
print ( x );
var x = b0.compare(b1,3,3+4,4,4+4);  // => 0 
print ( x );
buf1.copy(buf2, 0, 16, 20);  // copy from buf1 start=0 to buf2 loc 16 ~ 20 
b0.copy(b0, 0, 4,b0.length ); 
- see buff in string hex : 
buf2.toString('ascii',0,26 );   // if no number is ok 
for ( let pair of b0.entries() )print (pair[1], pair );     // b0.values() , iterator 
Object.keys(obj);         # get keys of Obj ; 
Object.values(obj) ; 
const b0 = Buffer.from('10ffaa', 'hex');
-buff fill write writeDouble() 
let b0 = Buffer.from('41414141414141414141414141414141', 'hex');
b0.fill('123467',5, b0.length-7); 
var len = buf.write('some string', 0, 'ascii');      // only change first few, len is written 
const buf = Buffer.alloc(18,0xff);
const range0_1000=Buffer.allocUnsafe(1000);
var len = buf.writeDoubleLE(11.222, 4);  // return the end of this write
var d = buf.readDoubleLE(4);   // 64bit , the double 
print ( b0.readInt32BE(4)); 

-buffer.indexOf  buffer.includes buffer.lastIndexOf(97)
buf.indexOf('is') ;  // if not found, then -1 
var b0= Buffer.from("0123456123"); 
var x =b0.indexOf("12",-3); print (x);        // from -3 index is ok 
buf.includes('this', 4);     // true or false 
-slice clone 
arr=arr.slice(0);        # this will be a deep copy of the arr 
arr = JSON.parse(JSON.stringify( arr) );  // also, is clone 
Buffer.from('012345678').slice(0, 3);     // 012  , not copy, just map 
-buffer keys , values 
buf.values() ; 
buf.keys();
for( let i of buf ) {}  ==>  for ( let i of buf.values() ){}    // for buf, no for  . in loop 
-

var x = parseInt("100", 2);console.log(x);        // parseInt , any base 
var print=()=>{var x=99;}; console.log ( (print).toString() ) ;  // see a function 
- print with label : print ( a, "a is"); 
var print = (x, label)=>{
    label && console.log( `${label} ${x}` ); 
    label || console.log ( x ) ; 
}

-
"11" < 3   // cmp  "11" -> 11 , and 11<3, so false 
-
"key1" in {key1:v1,  key2:v2 }  // => true ; 
var t = "toString" in obj ;
2 in [1,2,3]  
"2" in {2:NaN, 3:4};     // true   , the same to :  2 in obj 
for ( var i in arr){ console.log(arr[i]) ; }    // for ( let i of arr ){  print ( i ); }   , the same 
-if 
if ( n==0){} 
else if ( n==1){}
else {}
- JSON and parse 
var json = JSON.stringify( ob ); 
var b_json = JSON.parse( json ); 
-buff json
var j = buf2.toJSON();    // data:[97,98,99] if print 
var b1 = Buffer.from(j.data);  
-
var s = new String(11.333);      // from number to string 
-
arr.length=2;        //resize a array in js 
for ( let i in arr ) {print ( arr[i] ); }        // only existed ele 
- push pop shift unshift 
var i= arr.shift(); 
- sort 
arr.sort();   // no need return 
arr.sort().reverse();
arr.concat ( [1,2,3] )  // ( xxx, 1,2,3) 
arr.push (1,2,3,4 ,5); var arr = arr.slice( -2,-1) ;         // slice need return => 5 
var del_ele = arr.splice ( 2,1, 'a', 'b') ;     // in idx=2 , insert  'a', 'b' ele, and return [3]
-node split perl split match m() replace repl new RegExp 
var regex_t = new RegExp(`${ignore_list[i]}`, "gi"); 
var s = str.replace(/c(.)/, "$1" ); 
var split=(re, id_text)=>{
return id_text.split ( re ); 
}
var x =split ( /_/ ,  "this is_a_world " ); 
var m=( id_text, re )=>{
return id_text.match(re); 
}
var x =m("fyes, Yesse", /yes/ig); 
var repl=(id_text, re, new_repl_text)=>{
return id_text.replace(re,new_repl_text); 
}
var x =repl("xxfdjsfdd", /f\w/g, "FDD_"); 
var re = new RegExp( "\\d{5}") ;          //from string to re 

-
-foreach
    for (var i = 0, length = arr_perl _ stm.length; i < length; i++) {
        print (arr_perl _ stm[i]);
    }
arr.forEach( (value, idx, arr)=>{if ( value >2 ) { arr[idx] = value+value; }  } );   // v, i, arr 
-map filter split join match 
var arr = [1,2,3,4,5]; 
var s =arr.join("+"); 
arr = s.split("+"); 
arr = arr.map( function(x){return x-0+99;} ); 
print (arr);
arr = arr.filter(function(x){
    let s = new String(x);
    if ( s.match( /03/ ) ) return 1; 
    else return 0; 
}); 
print (arr ); 
- end map filter 
arr = arr.map(
($_)=>    {
    return $_ = $_*$_; 
        }  // end cb()
);  // end map()

arr = arr.filter( ($_)=>    { return $_>11; } ); 
arr = arr.filter( (value , idx)=>    { return idx%2==0; } ); 
arr = [1,2,,,,,,,,,,,6];      arr = arr.filter ( (v,i)=>{return 1;} );  // sparse arr to dense arr 
arr = arr.filter((next) => { return next.length==0?0:1; } );     // filter out the null [] 
arr=arr.filter( ($_)=>{ return $_?$_:0;} );     // strip ele with '' ; 

-every some reduce 
var b0=arr.every( (x)=>{ return x>0; } );
var sum = arr.reduce(function(sum, ele){ return sum+ele; }, 0); 
var max = arr.reduce(function(max, ele){ return max>ele?max:ele; }, arr[0]); 
- string is not array 
var b0 = Array.isArray( "string" );
-define and run once -
(  function(){print("OK");}() ); 
- this in object 
var A = {
m: function(x,y){print ( x + y ) ; print ( this ) ; },
};
function(){ arguments.length ; }
-let 
let [x,y]=[9,11];   [y, x] =[x,y];   // exchange, to  x=11, y=9; 
({a, b} =  { a:"aaa", b:"bbbb" });   
([a, b] =  ["aaa", "bbb"] ); 
let [a, ...b] = [1,2,3]; 
let flattern_arr= [0, ...[1,2], ...[3,4], 5];        // 0 1 2 3 4 5
-
-utils and underscore _ 
utils.isArray(arr) 
var print = console.log; 
require ( 'shelljs/global'); 
config.silent = true; 
var utils = require( 'utils' )._ ; 
var _ = require( 'underscore'); 
x = _.range(10); 
print ( x ) ; 
x = utils.flatten( [x, [11,12] ] ); 
print ( x ) ; 
arr = arr.sort(function(a,b){return (a)-(b);});
- shelljs 
require ( 'shelljs/global'); 
var x = echo( 'test.js'); 
x = ls ( 'shelljs/*.js'); 
print  ( x[1] ) ; 
var t = JSON.stringify( x ) ; 
print ( t ); 
var print = console.log; 
require ( 'shelljs/global'); 
config.silent = true; 

ls( 'shelljs/*.js'); 
exec( ' hostname -I ', function(ret_code, data, err){ print ( data );  }) ; 
var x = cat ( '*.js' ); 
echo ( x ); 
-
var print = console.log; 
require ( 'shelljs/global'); 
config.silent = true; 
exec( ' hostname -I ', function(code, stdout, error){ print ( stdout);  }) ;   
-end stdin
child_id.stdin.end();
-
var id_text = "Hello, world" ; 
x = exec ( ` perl -e  ' print qq( ${id_text}) ;' `  ).stdout  ; 
echo ( x + "___"); 
echo ( eval ( "ls(pwd())") );
cd ( 'wechat'); 
echo ( pwd() );
var platform = os.type().match(/^Win/) ? 'win' : 'unix';        //platform

- 

-
require( 'utils')  //after before 
var merge = require ( 'utils-merge');
merge( id_json_0, id_json_1 ); 
-
m.msg= "hello world"; 
m.msg[0]
typeof m.msg  -> string 
Object.keys( m ) [1]
var arr_2 = arr.map(function(_){var x =  _+"HELLO"; return x ; });
var str= arr_2.join(":")
-arguments[ ] 
var test = function( obj ) {
    print ( [ arguments.length ,arguments[3]['2'] ]. join(":") ); 
};

test( "a", "b", 1,{2:3},4);
var test = function( obj ) {
    print ( [ arguments.length ,arguments[3]['2'] ]. join(":") ); 
};

test( "a", "b", 1,{2:3},4);

if ( 'function' == typeof arguments[ arguments.length-1 ] ){ }
m.show = m.display = function() {} ;     # alias 
var number_i = Number(val) + 1;  
-multi entry function
var multi_entry = {
    a: function(a_){print (a_);}, 
    b: function(b_){print (b_);},
    c: function(c_){print (c_);},
};

multi_entry["a"] ({1:2});
multi_entry["b"] ("yes");
multi_entry["c"] (["arr0",1]);
-
for ( var i in arr){
    print ("---"+ i+"---" ); 
}

var id_d = new Date().toLocaleString();        # 11/29/2016, 10:27:24 PM
var id_d = new Date("2013-02-15 21:00:00");  
d1-d2         # => number ms 
var id_d = new Date( "2017-3-22 20:04").toLocaleString(); 

var date1=new Date("2011-01-01 11:11");  //开始时间
var date2=new Date("2011-01-01 12:11");    //结束时间
var date3=date2.getTime()-date1.getTime()  //时间差的毫秒数

//计算出相差天数
var days=Math.floor(date3/(24*3600*1000))

//计算出小时数
var leave1=date3%(24*3600*1000)    //计算天数后剩余的毫秒数
var hours=Math.floor(leave1/(3600*1000))
//计算相差分钟数
var leave2=leave1%(3600*1000)        //计算小时数后剩余的毫秒数
var minutes=Math.floor(leave2/(60*1000))

//计算相差秒数
var leave3=leave2%(60*1000)      //计算分钟数后剩余的毫秒数
var seconds=Math.round(leave3/1000)
print(" 相差 "+days+"天 "+hours+"小时 "+minutes+" 分钟"+seconds+" 秒")
//分类: Javascript
--
-regex in node.js 
var rgx =/[Hh]ello/g; 
var id_str = "hello Hello yes we can yello"; 
var arr_2 = id_str.match( rgx );
print ( arr_2 );        // should get ["hello", "Hello"]
---
var m_= function( str, reg){
    return str.match( reg )? 1:0; 
};

var out = m_( "HHello", /[hH]ello/g );

if ( out ){
    print ( "match" ); 
}
else if ( ! out ){
    print ( "not match" ); 
}

var now_is =  new Date().toLocaleString() ; 
print ( now_is.replace ( /0/g, "ZERO" ) );
var arr = now_is.split ( /[\/\: ]/ ) ;
-
exports = module.exports = m ={};             //exports module
m.msg="msg of m";
m.test= function (){
this.show();         // this means m 
};
- node sleep spawn
var child_id = spawn( "sleep" , ["0.3s"], {stdio:'inherit' }  );         // inherit fathers 
var sleep_sync_ms = (x)=> {
    var exec_sync = require("child_process").execSync;
    var env_var = process.env["WINDIR"]; 
    // sleep for windows, see: https://zhuanlan.zhihu.com/p/25412671 or see $perl_ p
    env_var && exec_sync( ` sleep ${x}  ` );  
    var sleep_second = (x-300) / 1000 *1.000 ; 
    if ( x <=300 ) {sleep_second=0;}
    env_var || exec_sync( ` sleep ${sleep_second}s ` ); 
}


var sleep_asyn_ms= (time_to_sleepi_ms,cb)=>{
    setTimeout(cb,time_to_sleepi_ms);
}


setTimeout(()=>{print("- after sleep for 5s");}, 5000);
- node wait for child id to exit 
var executor = ( cmd )=>{
    var child_id = exec_asyn(cmd, (error, stdout, stderr)=>{
        print(error); 
        print ( stdout ); 
        print ( stderr ); 

    } );
    return child_id; 
}; 

var cmd = 'sleep 3s && perl -v '; 
var child_id = executor( cmd ); 


//- make sure the child is closed and cb 
child_id.on( 'close',  (code)=>{    // exit | disconnect | close 
    sub_0(); 
//    child_id.kill();
    print ( `- code is close, and the code is: ${code}` ); 
    print ( arr ); 
} ); 
- end wait for child process 

--- end node.js ---

---typescript_ es6_ ---
let search = { ...{a:1111}, food: "rich" };  // flatten obj 
class A {
    constructor(public name: string, public id: number) { }
    doit() {
        console.log(this.name);
        console.log(this.id);
    }
};  // end class A {}
let id_a = new A("yes", 555);
id_a.doit();
-end typescript --

-express-
mkdir node_modules && cd node_modules
npm install express 
npm install -g express-generator    # then one can find "express" bin under node level
-express test
var express = require('express')
var app = express()
app.get('/', function (req, res) {
  res.send('Hello World')
})
app.listen(3000)
-

-file watch file open read-
#!node
-sync 
var fs=require("fs");
var data = fs.readFileSync("txt.txt", "utf8"); 
var arr = data.split( "\n");
print ( arr[0] ); 

-asyn 
var fs=require("fs");
var process_buf =(buf)=>{
print(buf.toString());
}
var id_text = fs.readFile("txt.txt" , (err, buf)=>{
process_buf( buf );
}); 
- read to arr ; 
fs.readFile("txt.txt", (err, buf) => {
    var arr = []; 
    var IF_WIN= process.env["WINDIR"];  
    IF_WIN && (arr=buf.toString("utf8").split ("\r\n")) ; 
    IF_WIN || (arr=buf.toString("utf8").split ("\n")); 
    print ( arr ); 
} ); 

fs.readFile("txt.txt", (err, buf) => {
    var arr= buf.toString("utf8").split("\r\n")
    print ( arr[1] ) ; 
} ); 

var fsw=require('fs');
fsw.watch( "./test", (EventType, filename)=>{
                if (filename){
                console.log( filename );
                }
                } );

-node process.argv  process exit pid 
// node test.js abc  => length == 3 
print ( process.argv.length );  //3
print ( process.argv ); 
print ( process.argv[0] );   //C:\jd_p\sw\pro\nodejs\node.exe
print ( process.argv[1] );     //C:\jd_p\sw\pro\tmp\test.js
print ( process.pid ); 
process.exit (0); 
process.kill( process.pid ) ;  //kill process by pid 
-cluster worker 
node_cluster_parallel_master_worker https://zhuanlan.zhihu.com/p/25454413  

var cluster= require("cluster");
var glo = 0; 

if ( cluster.isMaster ){
  var work0 = cluster.fork();  // work0.on('message'...
  cluster.fork(); 
  for(let i in cluster.workers){
    cluster.workers[i].on( "message", (message) => {
       print (`workers[${i}] get message => ${message.cmd}, global_number:${glo}`); 
       glo++;
    } ); 
  }
} // end master()
else {
  process.send( {cmd : `cmd from id : ${cluster.worker.id}`} );
  process.exit(0);   // on('exit',cb );
} // end slave
- end cluster example
print (`${ev} help`); 
em.once(ev, ()=> {
print ( ev ); 
}); 

var i = [1,2 , 'ab3ab']; 
i.push (99); 
child_process.exec('echo '+i, (error,stdout,stderr)=>{}); 
var print=console.log;

---crypto---
var fs = require("fs");
var util = require ( "util" );
var events = require ( "events" );
var child_process = require ( 'child_process' );
const crypto = require('crypto');
const cipher = crypto.createCipher('aes192', 'a password_');
var encrypted = cipher.update('some clear text data', 'utf8', 'hex');
encrypted += cipher.final('hex');
console.log(encrypted);
const decipher = crypto.createDecipher('aes192', 'a password_');
var decrypted = decipher.update(encrypted, 'hex', 'utf8');
decrypted += decipher.final('utf8');
console.log(decrypted);
---

--- raspberry pi_ ---
-
keyboard should use : Generic 104 key (PC), others keep defaults
-enable root-
sudo passwd root
sudo passwd --unlock root
-u disk mount-
ls /dev/sd*        : get disk 
sudo mkdir u_12g
alias mount_u_12g='cd /mnt && sudo mount -o uid=pi,gid=pi /dev/sdb1 /mnt/u_12g '
alias umount_u_12g='cd /mnt && sudo umount /mnt/u_12g '
hostname -I         # get ipaddress : native and internet's 
sudo vim /etc/rc.local         #in the start, right what init code
-  samba -
sudo samba         # start daemon
sudo vim /etc/samba/smb.conf          # in the tail add:
sudo smbpasswd -a pi        # must add an linux user 
sudo smbclient -L //192.168.0.106     # view what is shared 
http://user.qzone.qq.com/2589079022/blog/1475716675    # see samba details

fdisk -l         # see the file type 
sudo gedit /etc/fstab     # change file type in init time 
sudo mkfs.fat        # hope this can use on both windows and linux
sudo apt-get install exfat-fuse    # can work on both windows and Linux 
curl http://members.3322.org/dyndns/getip    #get outside ip 
wget  'https://downloads.raspberrypi.org/NOOBS_latest.torrent'  -O test.torrent
sudo apt-get install aria2 
aria2c -x 2 -j 2 NOOBS_latest.torrent -c
---nginx_ ---
sudo nginx -s quit    # quit all daemon
sudo nginx     #start daemon
sudo pkill nginx 
ps -aef | grep nginx     

server {
location /web/ {
root /home/jd/web/;
}
location ~ \.(gif|jpg|png)$ {
root /home/jd/web/image/;
}
location /baidu/ {
proxy_pass http://www.baidu.com/;
}
}

-octave_ matlab_--- 
type txt.txt
pwd
[x, y] = size(id_m)

-fprintf
fp = fopen ( 'x:\\txt.txt', 'w'); 
fprintf(fp, '%d', a);
fprintf('%d\n',88)  %to stdout 
t=sprintf('%d', 88)
str2num(t)+1   % => 89
fclose(fp);
-
% this will be :   1.0000000e+00   0.0000000e+00   0.0000000e+00
save  a.txt  -ascii a   
can use read_file_2_float_buf_1d() to read 

-open close 
function fcout(id_m, idx)
% usage :
% fcout( id_m , 1111 ) 
% also can use "load xxxx_txt" or "loat xxx.txt" to load 
% ==> x:\txt_1111_8_x_8_txt
% === dlmwrite('x.txt', rand(9), ' ' )
[r,c] = size(id_m);
fn = sprintf( 'x:\\txt_%s_%0d_x_%0d_txt' , num2str(idx), r,c );
fp = fopen(fn, 'w');

for i=1:r
    for j=1:c
            fprintf( fp, '%d ', id_m(i,j) );
    end
    fprintf( fp, '\n' );
end 
disp(fn)
-

if 1 == 1 && 2 == 2
  disp(1)
end

if 1 ~= 2 


x(1:2,:)

- a m file with different function 
>> type t.m

function tt=t(a)
tt=t1(a)+t2(a);
end

function t1_=t1(a)
t1_=a;
end

function t2_=t2(a)
t2_=a;
end
-

strcat( 'abc', '4' )
-img 
lena=imread('x:\\lena.bmp');
lena(1:44,1:44) = 0; 
imshow(lena);
-

-polyfit 
p=polyfit(x,y,2)   % p(1,1)*x^2 + ...  + x^0
y0=polyval(p,0)   % figure out (p ( 0 ) -> y0) 
plot( x, y, '*r', x0, y0, '-b' );        % plot and see issue 

who         % see all the vars 
eye(2) % -> [1,0;  0,1]
zeros(2,3) 
pinv(A)    % -> A(-1)
x = [1;2]; y = [2;3] ; plot(x, y);     
[x;y]  % [1,2,2,3 ]T 
x'   % -> transpose(x)   
a(2,1) 
x=1:0.1:2 
clear 
save x.dat x 
load x.dat 
load("mm.mat")
save("mm.mat", mm )
size(x)
rand(3,3) ; randn(3,3 )  % negtive or not 
pinv(A) * b   % A \ b  % solution for a equation   cal  Ax = b 
rot90 ([1, 2; 3, 4], -1)   % rotate 
linspace (0, 1, 3)   % 3 numbers 
disp("bye") 
-function 
> function f(x)
>     disp(x)
> endfunction
bitget (6, [3,2,1])  % bit opt 
dec2bin( bitset (2^10,[1,2,3])) 
x.*x  % ele by ele   %  divide :  x ./ x 
randperm( 4 )  %  3,2,4,1
-
－　x(1) x(2)　－－－二元方程求解
function y=f(x); y=zeros(2,1);y(1)=2*x(1)+x(2)-3; y(2)=x(1)+2*x(2)-3; endfunction　；　
[x, fval, info] = fsolve (@f, [1; 2])    % count solution for f(x,y) = 0 
function y=f(x); y=zeros(2,1); y(1)=x(1)^2 +2*x(1)*x(2)+1; y(2)=x(1)^2-x(2)+2*x(1)-4; endfunction; 
[x, fval, info] = fsolve (@f, [1; 111])

% get local minimal : 
fminunc (@(x) (x(1)-1)^2+3, [0;0])

-plot and hold on 
plot(x, y); 
hold on ; 
y=x.*x; 
plot(x, y1, 'r'); 
xlabel('x-year');
ylabel('income');
legend( 'y','y1'); 
title( 'year-income' ); 
print -dpng 'mypng.png' 

figure(1);  plot(x,y); 
figure(2); plot(x,y1);  
- subplot 
subplot(1, 2,1 ); plot(x,y) 
subplot(1, 2,1 ); plot(x,y1,'r')  
axis([-1 10 -10 10] )   % x from -1 to 10, y from -10 to 10 
clf ; 
imagesc(magic(3)), colorbar ,  colormap gray;
-plot3 
 [x_, y_]= meshgrid(x,y);
surf( x_, y_, x_+y_ )
contour(x_,y_,x_+y_.*y); colorbar ; 
y(:,:,1)  = zeros(2,3)
[ a,b,_ ]  = size(y)

w=imfinfo('test.jpg').Width
h=imfinfo('test.jpg').Height
x(:,:,3) = zeros(h, w)
imshow( x ) 
-

--- docker_ ---
https://yq.aliyun.com/articles/7695?spm=5176.100239.blogcont29941.14.c3v1iQ aliyu docker page tools 

>install docker engine 
curl -sSL http://acs-public-mirror.oss-cn-hangzhou.aliyuncs.com/docker-engine/internet | sh -
> install tensorflow
docker pull registry.cn-hangzhou.aliyuncs.com/denverdino/tensorflow



1.to daocloud create  a tiny host ,with pw is: dao+35~~~
2.remember the ssh ubuntu@ip and passwd 
3. connect to that machine with  ssh xxx
4. docker pull what I need first : tehsorflow/tensorflow
5. docker run -it tehsorflow/tensorflow bash 
6. ipython 



-use local mirror for docker: restart service 
 curl -sSL https://get.daocloud.io/daotools/set_mirror.sh | sh -s http://301484f5.m.daocloud.io
  sudo systemctl restart docker.service
docker run -it -p 8888:8888 gcr.io/tensorflow/tensorflow 
-
setup:
    download the deb file from :  https://apt.dockerproject.org/repo/pool/main/d/docker-engine/
    in ubuntu 16.04 ,  sudo dpkg -i /path/to/package.deb
    sudo docker run hello-world 

-search 
    docker search 
need to addgroup docker , add jd into the group , then can avoid "sudo"
//如果还没有 docker group 就添加一个 
sudo groupadd docker //将用户加入该 group 内。然后退出并重新登录就生效啦。 
sudo gpasswd -a${USER} docker //重启 docker 服务 
sudo service docker restart
//切换当前会话到新 
group newgrp - docker
docker image ls
docker run -it ubuntu bash
docker run -it tensorflow/tensorflow bash
docker run -it -v  $PWD:/tmp  busybox       # to mount host filesystem as container 
docker pull imageName        # install pull 
docker ps -a        # field $1 is container ID , stop it by :
    docker stop a4d437884f62     # a4dxxxx is container-ID
rm container by:     docker rm  container_id 
docker rmi -f IMAGE_ID
docker image inspect hello-world     # see "Cmd" section, about how to run 
docker container ls        # see container
docker cp  $t/txt.txt  68597a8bb4c1:/root/per l_p/txt.txt     #copy file to container 

# exec a container ,  run a image , first end :       docker container stop <container_name> or <container_id> 
    docker container start  $container_id && docker exec -it $container_id bash            # reentry a container  ①
    or :
    docker container start -i con_name         # docker re-entry a contain with bash  ②  ＝＝》 ①＝＝②
-nsenter-    
    docker container top suspicious_hopper
    sudo nsenter  -t 31993  -m -u -i -n -p        # namespace enter nsenter  , just like start -i. 

- docker save and load images 
    docker save -o busybox.tar busybox 
    docker load -o busybox.tar   
or:
   docker load -i busybox.tar 
    cat json.test | python -m json.tool     # json style 


--- caffe_ ---
-draw flow png 
sudo pip install pydot
sudo  apt-get install graphviz
root@3ce2f5b85241:/opt/caffe# ./python/draw_net.py ./examples/siamese/mnist_siamese.prototxt   ./examples/siamese/mnist_siamese.png
 
https://github.com/junku901/machine_learning     # github nodejs machine learning 

---dot_ ---
dot -V
dot -Tpng test.dot -o test.png & ecd test.png
http://blog.jobbole.com/94472/  demo
digraph "server"
 {
 graph["splines"="curved","overlap"="scalexy","rankdir"="LR"]
 node["fontsize"="8px","fontname"="arial","shape"="rect","margin"=0,"pad"=0,"style"="solid"]
 "1" -> "2" ;
 }
/* no direct */
graph abc{
a -- B;
B -- a[color=red];
}
digraph abc{
 "a b c" -> b;
 b -> c;
} 

graph minimal_nonplanar_graphs {
  size="9,19"

  URL="http://en.wikipedia.org/wiki/Kuratowski_theorem#Kuratowski_subgraphs"
  tooltip="click for \"Kuratowski theorem\""
  JD="JD"
  labelloc=t           
  label="Minimal nonplanar graphs (9 edges / 5 nodes)"
  node [style=filled]

  subgraph cluster_0 {
bgcolor="yellow";
    label="K_3,3"  color=lightblue  style=filled
    node [color=white]
    {A B C} -- {D E F}
  }

  subgraph cluster_1 {
    label=K_5  color=blue
    node [color=yellow  shape=box]
    1 -- {2 -- {3 -- {4 -- 5}}}
    } 
}

graph minimal_nonplanar_graphs {
  size = "8,8";
  subgraph sub_0{
    a [shape=box,fillcolor=green,/*style=dashed,*/style=filled];
    b;
    c;
    d;
    {a,b} -- {c,d};
  }
}
digraph sub_0{
  labelloc=t  
  label="this is a label"
  node [shape=record];  //rect
  edge [style=dashed];  //虚线
    a;
    b;
    c;
    d [shape=none, image="t.png" , label=""];
    a -> { b -> { c -> d[color=red] } } ;
  }

digraph abc{

  node [shape="record"];
  edge [style="dashed"];

  a [style="filled", color="black", fillcolor="chartreuse"];
  b;

    subgraph cluster_cd{
      label="c and d";
      bgcolor="mintcream";
      c;
      d;
    }

  a -> b;
  b -> d;
  c -> d [color="red"];
}
//table 
digraph abc {
//rankdir=TB;
node [shape=record,color="skyblue",];
// node [shape="plaintext"]; 
edge [];
a;
1;
0 [shape=doublecircle , style=filled];
A;
a [label="
{<a_>a|
b|
c}
"];
1 [label="1|<_2_>2|3|4"];
A [label="A|B|C"];
1:_2_ -> a:a_;
1 -> A;
  0 ->0 [label="fuck self",shape=diamond];  // shape = "Mrecord",   圆角矩形

}

-
  rankdir = "TB";  // LR 
  fontname = "Courier New"
  fontsize = 100; // big picture

  node [shape = doublecircle];
  
LR_0 LR_3 LR_4 LR_8; 
-
-time sequence-
digraph G {
size="10,10"
rankdir = "LR";
node [shape="point",width=0, height=0];
edge [ arrowhead=none];

{
rank = "same";
a[shape=plaintext]
a -> a0 -> a1 -> a2 -> a3 -> a4; 
}

{

rank = "same";
b[shape=plaintext]

b -> b0 -> b1 -> b2 -> b3 -> b4; 
}

edge[arrowhead=""];

a0->b0;
a1->b1;
b2->a2;
}
-


